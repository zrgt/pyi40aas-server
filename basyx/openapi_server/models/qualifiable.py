from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ..models.base_model import Model
from ..models.model_type import ModelType
from ..models.qualifier import Qualifier
from .. import util

from ..models.model_type import ModelType  # noqa: E501
from ..models.qualifier import Qualifier  # noqa: E501

class Qualifiable(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, qualifiers=None, model_type=None):  # noqa: E501
        """Qualifiable - a model defined in OpenAPI

        :param qualifiers: The qualifiers of this Qualifiable.  # noqa: E501
        :type qualifiers: List[Qualifier]
        :param model_type: The model_type of this Qualifiable.  # noqa: E501
        :type model_type: ModelType
        """
        self.openapi_types = {
            'qualifiers': List[Qualifier],
            'model_type': ModelType
        }

        self.attribute_map = {
            'qualifiers': 'qualifiers',
            'model_type': 'modelType'
        }

        self._qualifiers = qualifiers
        self._model_type = model_type

    @classmethod
    def from_dict(cls, dikt) -> 'Qualifiable':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Qualifiable of this Qualifiable.  # noqa: E501
        :rtype: Qualifiable
        """
        return util.deserialize_model(dikt, cls)

    @property
    def qualifiers(self) -> List[Qualifier]:
        """Gets the qualifiers of this Qualifiable.


        :return: The qualifiers of this Qualifiable.
        :rtype: List[Qualifier]
        """
        return self._qualifiers

    @qualifiers.setter
    def qualifiers(self, qualifiers: List[Qualifier]):
        """Sets the qualifiers of this Qualifiable.


        :param qualifiers: The qualifiers of this Qualifiable.
        :type qualifiers: List[Qualifier]
        """
        if qualifiers is not None and len(qualifiers) < 1:
            raise ValueError("Invalid value for `qualifiers`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._qualifiers = qualifiers

    @property
    def model_type(self) -> ModelType:
        """Gets the model_type of this Qualifiable.


        :return: The model_type of this Qualifiable.
        :rtype: ModelType
        """
        return self._model_type

    @model_type.setter
    def model_type(self, model_type: ModelType):
        """Sets the model_type of this Qualifiable.


        :param model_type: The model_type of this Qualifiable.
        :type model_type: ModelType
        """
        if model_type is None:
            raise ValueError("Invalid value for `model_type`, must not be `None`")  # noqa: E501

        self._model_type = model_type
