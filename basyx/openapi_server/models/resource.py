from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ..models.base_model import Model
from .. import util


class Resource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, path=None, content_type=None):  # noqa: E501
        """Resource - a model defined in OpenAPI

        :param path: The path of this Resource.  # noqa: E501
        :type path: object
        :param content_type: The content_type of this Resource.  # noqa: E501
        :type content_type: object
        """
        self.openapi_types = {
            'path': object,
            'content_type': object
        }

        self.attribute_map = {
            'path': 'path',
            'content_type': 'contentType'
        }

        self._path = path
        self._content_type = content_type

    @classmethod
    def from_dict(cls, dikt) -> 'Resource':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Resource of this Resource.  # noqa: E501
        :rtype: Resource
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path(self) -> object:
        """Gets the path of this Resource.


        :return: The path of this Resource.
        :rtype: object
        """
        return self._path

    @path.setter
    def path(self, path: object):
        """Sets the path of this Resource.


        :param path: The path of this Resource.
        :type path: object
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")  # noqa: E501

        self._path = path

    @property
    def content_type(self) -> object:
        """Gets the content_type of this Resource.


        :return: The content_type of this Resource.
        :rtype: object
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type: object):
        """Sets the content_type of this Resource.


        :param content_type: The content_type of this Resource.
        :type content_type: object
        """

        self._content_type = content_type
