from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ..models.base_model import Model
from ..models.data_specification_content_choice import DataSpecificationContentChoice
from ..models.reference import Reference
from .. import util

from ..models.data_specification_content_choice import DataSpecificationContentChoice  # noqa: E501
from ..models.reference import Reference  # noqa: E501

class EmbeddedDataSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_specification=None, data_specification_content=None):  # noqa: E501
        """EmbeddedDataSpecification - a model defined in OpenAPI

        :param data_specification: The data_specification of this EmbeddedDataSpecification.  # noqa: E501
        :type data_specification: Reference
        :param data_specification_content: The data_specification_content of this EmbeddedDataSpecification.  # noqa: E501
        :type data_specification_content: DataSpecificationContentChoice
        """
        self.openapi_types = {
            'data_specification': Reference,
            'data_specification_content': DataSpecificationContentChoice
        }

        self.attribute_map = {
            'data_specification': 'dataSpecification',
            'data_specification_content': 'dataSpecificationContent'
        }

        self._data_specification = data_specification
        self._data_specification_content = data_specification_content

    @classmethod
    def from_dict(cls, dikt) -> 'EmbeddedDataSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EmbeddedDataSpecification of this EmbeddedDataSpecification.  # noqa: E501
        :rtype: EmbeddedDataSpecification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_specification(self) -> Reference:
        """Gets the data_specification of this EmbeddedDataSpecification.


        :return: The data_specification of this EmbeddedDataSpecification.
        :rtype: Reference
        """
        return self._data_specification

    @data_specification.setter
    def data_specification(self, data_specification: Reference):
        """Sets the data_specification of this EmbeddedDataSpecification.


        :param data_specification: The data_specification of this EmbeddedDataSpecification.
        :type data_specification: Reference
        """
        if data_specification is None:
            raise ValueError("Invalid value for `data_specification`, must not be `None`")  # noqa: E501

        self._data_specification = data_specification

    @property
    def data_specification_content(self) -> DataSpecificationContentChoice:
        """Gets the data_specification_content of this EmbeddedDataSpecification.


        :return: The data_specification_content of this EmbeddedDataSpecification.
        :rtype: DataSpecificationContentChoice
        """
        return self._data_specification_content

    @data_specification_content.setter
    def data_specification_content(self, data_specification_content: DataSpecificationContentChoice):
        """Sets the data_specification_content of this EmbeddedDataSpecification.


        :param data_specification_content: The data_specification_content of this EmbeddedDataSpecification.
        :type data_specification_content: DataSpecificationContentChoice
        """
        if data_specification_content is None:
            raise ValueError("Invalid value for `data_specification_content`, must not be `None`")  # noqa: E501

        self._data_specification_content = data_specification_content
