from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ..models.base_model import Model
from ..models.value_reference_pair import ValueReferencePair
from .. import util

from ..models.value_reference_pair import ValueReferencePair  # noqa: E501

class ValueList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, value_reference_pairs=None):  # noqa: E501
        """ValueList - a model defined in OpenAPI

        :param value_reference_pairs: The value_reference_pairs of this ValueList.  # noqa: E501
        :type value_reference_pairs: List[ValueReferencePair]
        """
        self.openapi_types = {
            'value_reference_pairs': List[ValueReferencePair]
        }

        self.attribute_map = {
            'value_reference_pairs': 'valueReferencePairs'
        }

        self._value_reference_pairs = value_reference_pairs

    @classmethod
    def from_dict(cls, dikt) -> 'ValueList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ValueList of this ValueList.  # noqa: E501
        :rtype: ValueList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value_reference_pairs(self) -> List[ValueReferencePair]:
        """Gets the value_reference_pairs of this ValueList.


        :return: The value_reference_pairs of this ValueList.
        :rtype: List[ValueReferencePair]
        """
        return self._value_reference_pairs

    @value_reference_pairs.setter
    def value_reference_pairs(self, value_reference_pairs: List[ValueReferencePair]):
        """Sets the value_reference_pairs of this ValueList.


        :param value_reference_pairs: The value_reference_pairs of this ValueList.
        :type value_reference_pairs: List[ValueReferencePair]
        """
        if value_reference_pairs is None:
            raise ValueError("Invalid value for `value_reference_pairs`, must not be `None`")  # noqa: E501
        if value_reference_pairs is not None and len(value_reference_pairs) < 1:
            raise ValueError("Invalid value for `value_reference_pairs`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._value_reference_pairs = value_reference_pairs
