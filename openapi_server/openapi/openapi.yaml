openapi: 3.0.3
info:
  contact:
    email: info@idtwin.org
    name: Industrial Digital Twin Association (IDTA)
  description: "All APIs of the Specification of the [Specification of the Asset Administration\
    \ Shell: Part 2](http://industrialdigitaltwin.org/en/content-hub) in one collection.\
    \ Please not that this API is not intended to generate productive code but only\
    \ for overview purposes.  \nPublisher: Industrial Digital Twin Association (IDTA)\
    \ 2023\""
  license:
    name: CC BY 4.0
    url: https://creativecommons.org/licenses/by/4.0/
  termsOfService: https://github.com/admin-shell-io/aas-specs
  title: DotAAS Part 2 | HTTP/REST | Entire API Collection
  version: V3.0.1
servers:
- url: "{protocol}://{host_name}:{port}/api/{version_prefix}"
  variables:
    protocol:
      default: https
      description: Allows access through http and https (recommended)
      enum:
      - http
      - https
    host_name:
      default: admin-shell.io
      description: Hostname of server hosting the api
    port:
      default: "443"
      description: "80 is default for http, 443 for https"
      enum:
      - "80"
      - "443"
    version_prefix:
      default: v3.0
      enum:
      - v3.0
paths:
  /aas:
    get:
      operationId: get_asset_administration_shell
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShell'
          description: Requested Asset Administration Shell
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific Asset Administration Shell
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAssetAdministrationShell/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    put:
      operationId: put_asset_administration_shell
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShell'
        description: Asset Administration Shell object
        required: true
      responses:
        "204":
          description: Asset Administration Shell updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing Asset Administration Shell
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutAssetAdministrationShell/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/$reference:
    get:
      operationId: get_asset_administration_shell_reference
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: Requested Asset Administration Shell
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific Asset Administration Shell as a Reference
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAssetAdministrationShel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/asset-information:
    get:
      operationId: get_asset_information
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetInformation'
          description: Requested Asset Information
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Asset Information
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAssetInformation/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    put:
      operationId: put_asset_information
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetInformation'
        description: Asset Information object
        required: true
      responses:
        "204":
          description: Asset Information updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the Asset Information
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutAssetInformation/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/asset-information/thumbnail:
    delete:
      operationId: delete_thumbnail
      responses:
        "200":
          description: Thumbnail deletion successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteThumbnail/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    get:
      operationId: get_thumbnail
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: The thumbnail of the Asset Information.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetThumbnail/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    put:
      operationId: put_thumbnail
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/assetinformation_thumbnail_body'
        description: Thumbnail to upload
        required: true
      responses:
        "204":
          description: Thumbnail updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutThumbnail/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodel-refs:
    get:
      operationId: get_all_submodel_references
      parameters:
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReferencesResult'
          description: Requested submodel references
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel references
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelReferences/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    post:
      operationId: post_submodel_reference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reference'
        description: Reference to the Submodel
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: Submodel reference created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Creates a submodel reference at the Asset Administration Shell
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelReference/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodel-refs/{submodelIdentifier}:
    delete:
      operationId: delete_submodel_reference_by_id
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "204":
          description: Submodel reference deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes the submodel reference from the Asset Administration Shell.
        Does not delete the submodel itself!
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelReference/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}:
    delete:
      operationId: delete_submodel_by_id_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "204":
          description: Submodel deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes the submodel from the Asset Administration Shell.
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    get:
      operationId: get_submodel_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submodel'
          description: Requested Submodel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Submodel
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    patch:
      operationId: patch_submodel_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submodel'
        description: Submodel object
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the Submodel
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    put:
      operationId: put_submodel_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submodel'
        description: Submodel object
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the Submodel
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/$metadata:
    get:
      operationId: get_submodel_metadata_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelMetadata'
          description: Requested Submodel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Submodel's metadata elements
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    patch:
      operationId: patch_submodel_metadata_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelMetadata'
        description: Submodel object
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the metadata attributes of the Submodel
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/$path:
    get:
      operationId: get_submodel_path_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PathItem'
                type: array
          description: Requested Submodel in Path notation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Submodel's metadata elements
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/$reference:
    get:
      operationId: get_submodel_metadata_reference_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: Requested Submodel as a Reference
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Submodel as a Reference
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/$value:
    get:
      operationId: get_submodel_value_only_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelValue'
          description: Requested Submodel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Submodel's ValueOnly representation
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    patch:
      operationId: patch_submodel_value_only_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelValue'
        description: Submodel object in the ValueOnly representation
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates teh values of the Submodel
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements:
    get:
      operationId: get_all_submodel_elements_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsResult'
          description: List of found submodel elements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements including their hierarchy
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    post:
      operationId: post_submodel_element_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: Requested submodel element
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
          description: Submodel element created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Creates a new submodel element
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelElement/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/$metadata:
    get:
      operationId: get_all_submodel_elements_metadata_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsMetadataResult'
          description: List of found submodel elements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements including their hierarchy
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/$path:
    get:
      operationId: get_all_submodel_elements_path_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPathItemsResult'
          description: List of found submodel elements in the Path notation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements including their hierarchy
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/$reference:
    get:
      operationId: get_all_submodel_elements_reference_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReferencesResult'
          description: List of References of the found submodel elements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements as a list of References
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/$value:
    get:
      operationId: get_all_submodel_elements_value_only_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsValueResult'
          description: List of found submodel elements in their ValueOnly representation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements including their hierarchy in the ValueOnly
        representation
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}:
    delete:
      operationId: delete_submodel_element_by_path_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Submodel element deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes a submodel element at a specified path within the submodel
        elements hierarchy
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    get:
      operationId: get_submodel_element_by_path_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
          description: Requested submodel element
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific submodel element from the Submodel at a specified
        path
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    patch:
      operationId: patch_submodel_element_value_by_path_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: The updated value of the submodel element
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing submodel element value at a specified path within
        submodel elements hierarchy
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    post:
      operationId: post_submodel_element_by_path_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: Requested submodel element
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
          description: Submodel element created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Creates a new submodel element at a specified path within submodel
        elements hierarchy
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    put:
      operationId: put_submodel_element_by_path_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: Requested submodel element
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing submodel element at a specified path within submodel
        elements hierarchy
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodelElementByPath/3/0
      - https://admin-shell.io/aas/API/SetSubmodelElementValueByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$metadata:
    get:
      operationId: get_submodel_element_by_path_metadata_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElementMetadata'
          description: Requested submodel element
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the metadata attributes if a specific submodel element from
        the Submodel at a specified path
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    patch:
      operationId: patch_submodel_element_value_by_path_metadata_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElementMetadata'
        description: The updated metadata attributes of the submodel element
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the metadata attributes of an existing submodel element value
        at a specified path within submodel elements hierarchy
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$path:
    get:
      operationId: get_submodel_element_by_path_path_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathItem'
          description: Requested submodel element in the Path notation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific submodel element from the Submodel at a specified
        path in the Path notation
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$reference:
    get:
      operationId: get_submodel_element_by_path_reference_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: Requested submodel element in its ValueOnly representation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Reference of a specific submodel element from the Submodel
        at a specified path in the ValueOnly representation
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$value:
    get:
      operationId: get_submodel_element_by_path_value_only_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElementValue'
          description: Requested submodel element in its ValueOnly representation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific submodel element from the Submodel at a specified
        path in the ValueOnly representation
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    patch:
      operationId: patch_submodel_element_value_by_path_value_only_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElementValue'
        description: The updated value of the submodel element
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the value of an existing submodel element value at a specified
        path within submodel elements hierarchy
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/attachment:
    delete:
      operationId: delete_file_by_path_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes file content of an existing submodel element at a specified
        path within submodel elements hierarchy
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteFileByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    get:
      operationId: get_file_by_path_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Requested file
          headers:
            Content-Disposition:
              description: In order to physically download the file usually set to
                attachment with a filename
              example: attachment; filename="filename.jpg"
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Downloads file content from a specific submodel element from the Submodel
        at a specified path
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetFileByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
    put:
      operationId: put_file_by_path_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/idShortPath_attachment_body'
        description: File to upload
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Uploads file content to an existing submodel element at a specified
        path within submodel elements hierarchy
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutFileByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke:
    post:
      operationId: invoke_operation_sync_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
        description: Operation request object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Synchronously invokes an Operation at a specified path
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationSync/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke-asnyc/$value:
    post:
      operationId: invoke_operation_async_value_only_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequestValueOnly'
        description: Operation request object
        required: true
      responses:
        "202":
          description: The server has accepted the request.
          headers:
            Location:
              description: The URL where the client can find more information about
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Asynchronously invokes an Operation at a specified path
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationAsync/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke-async:
    post:
      operationId: invoke_operation_async_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
        description: Operation request object
        required: true
      responses:
        "202":
          description: The server has accepted the request.
          headers:
            Location:
              description: The URL where the client can find more information about
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Synchronously invokes an Operation at a specified path
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationAsync/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke/$value:
    post:
      operationId: invoke_operation_sync_value_only_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequestValueOnly'
        description: Operation request object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultValueOnly'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Synchronously invokes an Operation at a specified path
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationSync/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/operation-results/{handleId}:
    get:
      operationId: get_operation_async_result_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: The returned handle id of an operation’s asynchronous invocation
          used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: handleId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Operation result of an asynchronous invoked Operation
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncResult/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/operation-results/{handleId}/$value:
    get:
      operationId: get_operation_async_result_value_only_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: The returned handle id of an operation’s asynchronous invocation
          used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: handleId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultValueOnly'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the value of the Operation result of an asynchronous invoked
        Operation
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncResult/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /aas/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/operation-status/{handleId}:
    get:
      operationId: get_operation_async_status_aas
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: The returned handle id of an operation’s asynchronous invocation
          used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: handleId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseOperationResult'
          description: Operation result object containing information that the 'executionState'
            is still 'Running'
        "302":
          description: The target resource is available but at a different location.
          headers:
            Location:
              description: The URL where the client can find the target resource.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Operation status of an asynchronous invoked Operation
      tags:
      - Asset Administration Shell API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncStatus/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_api_controller
  /concept-descriptions:
    get:
      operationId: get_all_concept_descriptions
      parameters:
      - description: The Concept Description’s IdShort
        explode: true
        in: query
        name: idShort
        required: false
        schema:
          type: string
        style: form
      - description: IsCaseOf reference (UTF8-BASE64-URL-encoded)
        explode: true
        in: query
        name: isCaseOf
        required: false
        schema:
          format: byte
          type: string
        style: form
      - description: DataSpecification reference (UTF8-BASE64-URL-encoded)
        explode: true
        in: query
        name: dataSpecificationRef
        required: false
        schema:
          format: byte
          type: string
        style: form
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConceptDescriptionsResult'
          description: Requested Concept Descriptions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all Concept Descriptions
      tags:
      - Concept Description Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllConceptDescriptions/3/0
      - https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIdShort/3/0
      - https://admin-shell.io/aas/API/GetAllConceptDescriptionsByIsCaseOf/3/0
      - https://admin-shell.io/aas/API/GetAllConceptDescriptionsByDataSpecificationReference/3/0
      x-openapi-router-controller: openapi_server.controllers.concept_description_repository_api_controller
    post:
      operationId: post_concept_description
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConceptDescription'
        description: Concept Description object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptDescription'
          description: Concept Description created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Creates a new Concept Description
      tags:
      - Concept Description Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostConceptDescription/3/0
      x-openapi-router-controller: openapi_server.controllers.concept_description_repository_api_controller
  /concept-descriptions/{cdIdentifier}:
    delete:
      operationId: delete_concept_description_by_id
      parameters:
      - description: The Concept Description’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: cdIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "204":
          description: Concept Description deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes a Concept Description
      tags:
      - Concept Description Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteConceptDescriptionById/3/0
      x-openapi-router-controller: openapi_server.controllers.concept_description_repository_api_controller
    get:
      operationId: get_concept_description_by_id
      parameters:
      - description: The Concept Description’s unique id (UTF8-BASE64-URL-encoded)
        explode: true
        in: path
        name: cdIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptDescription'
          description: Requested Concept Description
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific Concept Description
      tags:
      - Concept Description Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetConceptDescriptionById/3/0
      x-openapi-router-controller: openapi_server.controllers.concept_description_repository_api_controller
    put:
      operationId: put_concept_description_by_id
      parameters:
      - description: The Concept Description’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: cdIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConceptDescription'
        description: Concept Description object
        required: true
      responses:
        "204":
          description: Concept Description updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing Concept Description
      tags:
      - Concept Description Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutConceptDescriptionById/3/0
      x-openapi-router-controller: openapi_server.controllers.concept_description_repository_api_controller
  /description:
    get:
      operationId: get_description
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDescription'
          description: Requested Description
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
      summary: Returns the self-describing information of a network resource (ServiceDescription)
      tags:
      - Description API
      x-semanticIds:
      - https://admin-shell.io/aas/API/Descriptor/GetDescription/3/0
      x-openapi-router-controller: openapi_server.controllers.description_api_controller
  /lookup/shells:
    get:
      operationId: get_all_asset_administration_shell_ids_by_asset_link
      parameters:
      - description: "A list of specific Asset identifiers. Each Asset identifier\
          \ is a base64-url-encoded [SpecificAssetId](https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0.1#/components/schemas/SpecificAssetId)"
        explode: true
        in: query
        name: assetIds
        required: false
        schema:
          example: ?assetIds=eyAibmFtZSI6ICJzb21lLWFzc2V0LWlkIiwgInZhbHVlIjogImh0dHA6Ly9leGFtcGxlLWNvbXBhbnkuY29tL215QXNzZXQiLCAiZXh0ZXJuYWxTdWJqZWN0SWQiOiB7ICJrZXlzIjogWyB7ICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIsICJ2YWx1ZSI6ICJodHRwOi8vZXhhbXBsZS1jb21wYW55LmNvbS9leGFtcGxlLWNvbXBhbnlzLWFzc2V0LWtleXMiIH0gXSwgInR5cGUiOiAiR2xvYmFsUmVmZXJlbmNlIiB9IH0&assetIds=eyAibmFtZSI6ICJzb21lLW90aGVyLWFzc2V0LWlkIiwgInZhbHVlIjogIjEyMzQ1QUJDIiwgImV4dGVybmFsU3ViamVjdElkIjogeyAia2V5cyI6IFsgeyAidHlwZSI6ICJHbG9iYWxSZWZlcmVuY2UiLCAidmFsdWUiOiAiaHR0cDovL215LW93bi1jb21wYW55LmNvbS9rZXlzIiB9IF0sICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIgfSB9
          items:
            format: byte
            type: string
          type: array
        style: form
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Requested Asset Administration Shell ids
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a list of Asset Administration Shell ids linked to specific
        Asset identifiers
      tags:
      - Asset Administration Shell Basic Discovery API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellIdsByAssetLink/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_basic_discovery_api_controller
  /lookup/shells/{aasIdentifier}:
    delete:
      operationId: delete_all_asset_links_by_id
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "204":
          description: Specific Asset identifiers deleted successfully
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes all specific Asset identifiers linked to an Asset Administration
        Shell to edit discoverable content
      tags:
      - Asset Administration Shell Basic Discovery API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteAllAssetLinksById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_basic_discovery_api_controller
    get:
      operationId: get_all_asset_links_by_id
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SpecificAssetId'
                type: array
          description: Requested specific Asset identifiers
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a list of specific Asset identifiers based on an Asset Administration
        Shell id to edit discoverable content
      tags:
      - Asset Administration Shell Basic Discovery API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllAssetLinksById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_basic_discovery_api_controller
    post:
      operationId: post_all_asset_links_by_id
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SpecificAssetId'
              type: array
        description: A list of specific Asset identifiers
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SpecificAssetId'
                type: array
          description: Specific Asset identifiers created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Creates specific Asset identifiers linked to an Asset Administration
        Shell to edit discoverable content
      tags:
      - Asset Administration Shell Basic Discovery API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostAllAssetLinksById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_basic_discovery_api_controller
  /packages:
    get:
      operationId: get_all_aasx_package_ids
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: true
        in: query
        name: aasId
        required: false
        schema:
          format: byte
          type: string
        style: form
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPackageDescriptionsResult'
          description: Requested package list
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a list of available AASX packages at the server
      tags:
      - AASX File Server API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllAASXPackageIds/3/0
      x-openapi-router-controller: openapi_server.controllers.aasx_file_server_api_controller
    post:
      operationId: post_aasx_package
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: application/asset-administration-shell-package
                style: form
            schema:
              $ref: '#/components/schemas/packages_body'
        description: AASX package
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageDescription'
          description: AASX package stored successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Stores the AASX package at the server
      tags:
      - AASX File Server API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostAASXPackage/3/0
      x-openapi-router-controller: openapi_server.controllers.aasx_file_server_api_controller
  /packages/{packageId}:
    delete:
      operationId: delete_aasxby_package_id
      parameters:
      - description: The package Id (UTF8-BASE64-URL-encoded)
        explode: true
        in: path
        name: packageId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "204":
          description: Deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes a specific AASX package from the server
      tags:
      - AASX File Server API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteAASXByPackageId/3/0
      x-openapi-router-controller: openapi_server.controllers.aasx_file_server_api_controller
    get:
      operationId: get_aasxby_package_id
      parameters:
      - description: The package Id (UTF8-BASE64-URL-encoded)
        explode: true
        in: path
        name: packageId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/asset-administration-shell-package:
              schema:
                format: binary
                type: string
          description: Requested AASX package
          headers:
            X-FileName:
              description: Filename of the package
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific AASX package from the server
      tags:
      - AASX File Server API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAASXByPackageId/3/0
      x-openapi-router-controller: openapi_server.controllers.aasx_file_server_api_controller
    put:
      operationId: put_aasxby_package_id
      parameters:
      - description: The package Id (UTF8-BASE64-URL-encoded)
        explode: true
        in: path
        name: packageId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: application/asset-administration-shell-package
                style: form
            schema:
              $ref: '#/components/schemas/packages_packageId_body'
        description: AASX package
        required: true
      responses:
        "204":
          description: AASX package updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the AASX package at the server
      tags:
      - AASX File Server API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutAASXByPackageId/3/0
      x-openapi-router-controller: openapi_server.controllers.aasx_file_server_api_controller
  /serialization:
    get:
      operationId: generate_serialization_by_ids
      parameters:
      - description: The Asset Administration Shells' unique ids (UTF8-BASE64-URL-encoded)
        explode: true
        in: query
        name: aasIds
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The Submodels' unique ids (UTF8-BASE64-URL-encoded)
        explode: true
        in: query
        name: submodelIds
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include Concept Descriptions?
        explode: true
        in: query
        name: includeConceptDescriptions
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/asset-administration-shell-package+xml:
              schema:
                description: AASX package
                format: binary
                type: string
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Environment'
          description: Requested serialization based on SerializationFormat
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns an appropriate serialization based on the specified format
        (see SerializationFormat)
      tags:
      - Serialization API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GenerateSerializationByIds/3/0
      x-openapi-router-controller: openapi_server.controllers.serialization_api_controller
  /shell-descriptors:
    get:
      operationId: get_all_asset_administration_shell_descriptors
      parameters:
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: The Asset's kind (Instance or Type)
        explode: true
        in: query
        name: assetKind
        required: false
        schema:
          $ref: '#/components/schemas/AssetKind'
        style: form
      - description: The Asset's type (UTF8-BASE64-URL-encoded)
        explode: true
        in: query
        name: assetType
        required: false
        schema:
          maxLength: 2000
          minLength: 1
          pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\U00010000-\\U0010FFFF]*$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssetAdministrationShellDescriptorsResult'
          description: Requested Asset Administration Shell Descriptors
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all Asset Administration Shell Descriptors
      tags:
      - Asset Administration Shell Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellDescriptors/3/0
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellDescriptorsByAssetKind/3/0
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellDescriptorsByAssetType/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_registry_api_controller
    post:
      operationId: post_asset_administration_shell_descriptor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        description: Asset Administration Shell Descriptor object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
          description: Asset Administration Shell Descriptor created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: "Creates a new Asset Administration Shell Descriptor, i.e. registers\
        \ an AAS"
      tags:
      - Asset Administration Shell Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostAssetAdministrationShellDescriptor/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_registry_api_controller
  /shell-descriptors/{aasIdentifier}:
    delete:
      operationId: delete_asset_administration_shell_descriptor_by_id
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "204":
          description: Asset Administration Shell Descriptor deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: "Deletes an Asset Administration Shell Descriptor, i.e. de-registers\
        \ an AAS"
      tags:
      - Asset Administration Shell Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteAssetAdministrationShellDescriptorById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_registry_api_controller
    get:
      operationId: get_asset_administration_shell_descriptor_by_id
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
          description: Requested Asset Administration Shell Descriptor
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific Asset Administration Shell Descriptor
      tags:
      - Asset Administration Shell Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAssetAdministrationShellDescriptorById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_registry_api_controller
    put:
      operationId: put_asset_administration_shell_descriptor_by_id
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
        description: Asset Administration Shell Descriptor object
        required: true
      responses:
        "204":
          description: Asset Administration Shell Descriptor updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing Asset Administration Shell Descriptor
      tags:
      - Asset Administration Shell Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutAssetAdministrationShellDescriptorById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_registry_api_controller
  /shell-descriptors/{aasIdentifier}/submodel-descriptors:
    get:
      operationId: get_all_submodel_descriptors_through_superpath
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelDescriptorsResult'
          description: Requested Submodel Descriptors
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all Submodel Descriptors
      tags:
      - Asset Administration Shell Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_registry_api_controller
    post:
      operationId: post_submodel_descriptor_through_superpath
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelDescriptor'
        description: Submodel Descriptor object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelDescriptor'
          description: Submodel Descriptor created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: "Creates a new Submodel Descriptor, i.e. registers a submodel"
      tags:
      - Asset Administration Shell Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelDescriptor/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_registry_api_controller
  /shell-descriptors/{aasIdentifier}/submodel-descriptors/{submodelIdentifier}:
    delete:
      operationId: delete_submodel_descriptor_by_id_through_superpath
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "204":
          description: Submodel Descriptor deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: "Deletes a Submodel Descriptor, i.e. de-registers a submodel"
      tags:
      - Asset Administration Shell Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_registry_api_controller
    get:
      operationId: get_submodel_descriptor_by_id_through_superpath
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelDescriptor'
          description: Requested Submodel Descriptor
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific Submodel Descriptor
      tags:
      - Asset Administration Shell Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelDescriptorById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_registry_api_controller
    put:
      operationId: put_submodel_descriptor_by_id_through_superpath
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelDescriptor'
        description: Submodel Descriptor object
        required: true
      responses:
        "204":
          description: Submodel Descriptor updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing Submodel Descriptor
      tags:
      - Asset Administration Shell Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodelDescriptorById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_registry_api_controller
  /shells:
    get:
      operationId: get_all_asset_administration_shells
      parameters:
      - description: "A list of specific Asset identifiers. Each Asset identifier\
          \ is a base64-url-encoded [SpecificAssetId](https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0.1#/components/schemas/SpecificAssetId)"
        explode: true
        in: query
        name: assetIds
        required: false
        schema:
          example: ?assetIds=eyAibmFtZSI6ICJzb21lLWFzc2V0LWlkIiwgInZhbHVlIjogImh0dHA6Ly9leGFtcGxlLWNvbXBhbnkuY29tL215QXNzZXQiLCAiZXh0ZXJuYWxTdWJqZWN0SWQiOiB7ICJrZXlzIjogWyB7ICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIsICJ2YWx1ZSI6ICJodHRwOi8vZXhhbXBsZS1jb21wYW55LmNvbS9leGFtcGxlLWNvbXBhbnlzLWFzc2V0LWtleXMiIH0gXSwgInR5cGUiOiAiR2xvYmFsUmVmZXJlbmNlIiB9IH0&assetIds=eyAibmFtZSI6ICJzb21lLW90aGVyLWFzc2V0LWlkIiwgInZhbHVlIjogIjEyMzQ1QUJDIiwgImV4dGVybmFsU3ViamVjdElkIjogeyAia2V5cyI6IFsgeyAidHlwZSI6ICJHbG9iYWxSZWZlcmVuY2UiLCAidmFsdWUiOiAiaHR0cDovL215LW93bi1jb21wYW55LmNvbS9rZXlzIiB9IF0sICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIgfSB9
          items:
            format: byte
            type: string
          type: array
        style: form
      - description: The Asset Administration Shell’s IdShort
        explode: true
        in: query
        name: idShort
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAssetAdministrationShellsResult'
          description: Requested Asset Administration Shells
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all Asset Administration Shells
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/3/0
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/3/0
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    post:
      operationId: post_asset_administration_shell
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShell'
        description: Asset Administration Shell object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShell'
          description: Asset Administration Shell created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Creates a new Asset Administration Shell
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostAssetAdministrationShell/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/$reference:
    get:
      operationId: get_all_asset_administration_shells_reference
      parameters:
      - description: "A list of specific Asset identifiers. Each Asset identifier\
          \ is a base64-url-encoded [SpecificAssetId](https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0.1#/components/schemas/SpecificAssetId)"
        explode: true
        in: query
        name: assetIds
        required: false
        schema:
          example: ?assetIds=eyAibmFtZSI6ICJzb21lLWFzc2V0LWlkIiwgInZhbHVlIjogImh0dHA6Ly9leGFtcGxlLWNvbXBhbnkuY29tL215QXNzZXQiLCAiZXh0ZXJuYWxTdWJqZWN0SWQiOiB7ICJrZXlzIjogWyB7ICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIsICJ2YWx1ZSI6ICJodHRwOi8vZXhhbXBsZS1jb21wYW55LmNvbS9leGFtcGxlLWNvbXBhbnlzLWFzc2V0LWtleXMiIH0gXSwgInR5cGUiOiAiR2xvYmFsUmVmZXJlbmNlIiB9IH0&assetIds=eyAibmFtZSI6ICJzb21lLW90aGVyLWFzc2V0LWlkIiwgInZhbHVlIjogIjEyMzQ1QUJDIiwgImV4dGVybmFsU3ViamVjdElkIjogeyAia2V5cyI6IFsgeyAidHlwZSI6ICJHbG9iYWxSZWZlcmVuY2UiLCAidmFsdWUiOiAiaHR0cDovL215LW93bi1jb21wYW55LmNvbS9rZXlzIiB9IF0sICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIgfSB9
          items:
            format: byte
            type: string
          type: array
        style: form
      - description: The Asset Administration Shell’s IdShort
        explode: true
        in: query
        name: idShort
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReferencesResult'
          description: Requested Asset Administration Shells as a list of References
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns References to all Asset Administration Shells
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShells/3/0
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByAssetId/3/0
      - https://admin-shell.io/aas/API/GetAllAssetAdministrationShellsByIdShort/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}:
    delete:
      operationId: delete_asset_administration_shell_by_id
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "204":
          description: Asset Administration Shell deleted successfully
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes an Asset Administration Shell
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteAssetAdministrationShellById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    get:
      operationId: get_asset_administration_shell_by_id
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetAdministrationShell'
          description: Requested Asset Administration Shell
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific Asset Administration Shell
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAssetAdministrationShellById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    put:
      operationId: put_asset_administration_shell_by_id
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetAdministrationShell'
        description: Asset Administration Shell object
        required: true
      responses:
        "204":
          description: Asset Administration Shell updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing Asset Administration Shell
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutAssetAdministrationShellById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/$reference:
    get:
      operationId: get_asset_administration_shell_by_id_reference_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: Requested Asset Administration Shell
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific Asset Administration Shell as a Reference
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAssetAdministrationShellById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/asset-information:
    get:
      operationId: get_asset_information_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetInformation'
          description: Requested Asset Information
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Asset Information
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAssetInformation/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    put:
      operationId: put_asset_information_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetInformation'
        description: Asset Information object
        required: true
      responses:
        "204":
          description: Asset Information updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the Asset Information
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutAssetInformation/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/asset-information/thumbnail:
    delete:
      operationId: delete_thumbnail_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          description: Thumbnail deletion successful
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteThumbnail/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    get:
      operationId: get_thumbnail_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: The thumbnail of the Asset Information.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetThumbnail/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    put:
      operationId: put_thumbnail_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/assetinformation_thumbnail_body_1'
        description: Thumbnail to upload
        required: true
      responses:
        "204":
          description: Thumbnail updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutThumbnail/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodel-refs:
    get:
      operationId: get_all_submodel_references_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReferencesResult'
          description: Requested submodel references
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel references
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelReferences/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    post:
      operationId: post_submodel_reference_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reference'
        description: Reference to the Submodel
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: Submodel reference created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Creates a submodel reference at the Asset Administration Shell
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelReference/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodel-refs/{submodelIdentifier}:
    delete:
      operationId: delete_submodel_reference_by_id_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "204":
          description: Submodel reference deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes the submodel reference from the Asset Administration Shell.
        Does not delete the submodel itself!
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelReference/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}:
    delete:
      operationId: delete_submodel_by_id_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "204":
          description: Submodel deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes the submodel from the Asset Administration Shell and the Repository.
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    get:
      operationId: get_submodel_by_id_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submodel'
          description: Requested Submodel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Submodel
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    patch:
      operationId: patch_submodel_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submodel'
        description: Submodel object
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the Submodel
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    put:
      operationId: put_submodel_by_id_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submodel'
        description: Submodel object
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the Submodel
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/$metadata:
    get:
      operationId: get_submodel_by_id_metadata_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelMetadata'
          description: Requested Submodel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Submodel's metadata elements
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    patch:
      operationId: patch_submodel_by_id_metadata_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelMetadata'
        description: Submodel object
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the metadata attributes of the Submodel
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/$path:
    get:
      operationId: get_submodel_by_id_path_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PathItem'
                type: array
          description: Requested Submodel in Path notation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Submodel's metadata elements
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/$reference:
    get:
      operationId: get_submodel_by_id_reference_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: Requested Submodel as a Reference
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Submodel as a Reference
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/$value:
    get:
      operationId: get_submodel_by_id_value_only_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelValue'
          description: Requested Submodel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Submodel's ValueOnly representation
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    patch:
      operationId: patch_submodel_by_id_value_only_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelValue'
        description: Submodel object in the ValueOnly representation
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates teh values of the Submodel
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements:
    get:
      operationId: get_all_submodel_elements_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsResult'
          description: List of found submodel elements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements including their hierarchy
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    post:
      operationId: post_submodel_element_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: Requested submodel element
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
          description: Submodel element created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Creates a new submodel element
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelElement/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/$metadata:
    get:
      operationId: get_all_submodel_elements_metadata_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsMetadataResult'
          description: List of found submodel elements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements including their hierarchy
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/$path:
    get:
      operationId: get_all_submodel_elements_path_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPathItemsResult'
          description: List of found submodel elements in the Path notation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements including their hierarchy
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/$reference:
    get:
      operationId: get_all_submodel_elements_reference_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReferencesResult'
          description: List of References of the found submodel elements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements as a list of References
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/$value:
    get:
      operationId: get_all_submodel_elements_value_only_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsValueResult'
          description: List of found submodel elements in their ValueOnly representation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements including their hierarchy in the ValueOnly
        representation
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}:
    delete:
      operationId: delete_submodel_element_by_path_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Submodel element deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes a submodel element at a specified path within the submodel
        elements hierarchy
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    get:
      operationId: get_submodel_element_by_path_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
          description: Requested submodel element
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific submodel element from the Submodel at a specified
        path
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    patch:
      operationId: patch_submodel_element_value_by_path_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: The updated value of the submodel element
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing submodel element value at a specified path within
        submodel elements hierarchy
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    post:
      operationId: post_submodel_element_by_path_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: Requested submodel element
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
          description: Submodel element created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Creates a new submodel element at a specified path within submodel
        elements hierarchy
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    put:
      operationId: put_submodel_element_by_path_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: Requested submodel element
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing submodel element at a specified path within submodel
        elements hierarchy
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodelElementByPath/3/0
      - https://admin-shell.io/aas/API/SetSubmodelElementValueByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$metadata:
    get:
      operationId: get_submodel_element_by_path_metadata_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElementMetadata'
          description: Requested submodel element
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the metadata attributes if a specific submodel element from
        the Submodel at a specified path
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    patch:
      operationId: patch_submodel_element_value_by_path_metadata
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElementMetadata'
        description: The updated metadata attributes of the submodel element
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the metadata attributes of an existing submodel element value
        at a specified path within submodel elements hierarchy
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$path:
    get:
      operationId: get_submodel_element_by_path_path_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathItem'
          description: Requested submodel element in the Path notation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific submodel element from the Submodel at a specified
        path in the Path notation
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$reference:
    get:
      operationId: get_submodel_element_by_path_reference_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: Requested submodel element in its ValueOnly representation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Reference of a specific submodel element from the Submodel
        at a specified path
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$value:
    get:
      operationId: get_submodel_element_by_path_value_only_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElementValue'
          description: Requested submodel element in its ValueOnly representation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific submodel element from the Submodel at a specified
        path in the ValueOnly representation
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    patch:
      operationId: patch_submodel_element_value_by_path_value_only
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElementValue'
        description: The updated value of the submodel element
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the value of an existing submodel element value at a specified
        path within submodel elements hierarchy
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/attachment:
    delete:
      operationId: delete_file_by_path_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes file content of an existing submodel element at a specified
        path within submodel elements hierarchy
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteFileByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    get:
      operationId: get_file_by_path_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Requested file
          headers:
            Content-Disposition:
              description: In order to physically download the file usually set to
                attachment with a filename
              example: attachment; filename="filename.jpg"
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Downloads file content from a specific submodel element from the Submodel
        at a specified path
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetFileByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
    put:
      operationId: put_file_by_path_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/idShortPath_attachment_body_2'
        description: File to upload
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Uploads file content to an existing submodel element at a specified
        path within submodel elements hierarchy
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutFileByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke:
    post:
      operationId: invoke_operation_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
        description: Operation request object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Synchronously invokes an Operation at a specified path
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationSync/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke-async:
    post:
      operationId: invoke_operation_async_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
        description: Operation request object
        required: true
      responses:
        "202":
          description: The server has accepted the request.
          headers:
            Location:
              description: The URL where the client can find more information about
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Asynchronously invokes an Operation at a specified path
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationAsync/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke-async/$value:
    post:
      operationId: invoke_operation_async_value_only_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequestValueOnly'
        description: Operation request object
        required: true
      responses:
        "202":
          description: The server has accepted the request.
          headers:
            Location:
              description: The URL where the client can find more information about
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Asynchronously invokes an Operation at a specified path
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationAsync/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke/$value:
    post:
      operationId: invoke_operation_value_only_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequestValueOnly'
        description: Operation request object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultValueOnly'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Synchronously invokes an Operation at a specified path
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationSync/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/operation-results/{handleId}:
    get:
      operationId: get_operation_async_result_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: The returned handle id of an operation’s asynchronous invocation
          used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: handleId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Operation result of an asynchronous invoked Operation
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncResult/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/operation-results/{handleId}/$value:
    get:
      operationId: get_operation_async_result_value_only_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: The returned handle id of an operation’s asynchronous invocation
          used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: handleId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultValueOnly'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the ValueOnly notation of the Operation result of an asynchronous
        invoked Operation
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncResult/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /shells/{aasIdentifier}/submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/operation-status/{handleId}:
    get:
      operationId: get_operation_async_status_aas_repository
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: The returned handle id of an operation’s asynchronous invocation
          used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: handleId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseOperationResult'
          description: Operation result object containing information that the 'executionState'
            is still 'Running'
        "302":
          description: The target resource is available but at a different location.
          headers:
            Location:
              description: The URL where the client can find the target resource.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Operation status of an asynchronous invoked Operation
      tags:
      - Asset Administration Shell Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncStatus/3/0
      x-openapi-router-controller: openapi_server.controllers.asset_administration_shell_repository_api_controller
  /submodel:
    get:
      operationId: get_submodel
      parameters:
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submodel'
          description: Requested Submodel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Submodel
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
    patch:
      operationId: patch_submodel
      parameters:
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submodel'
        description: Submodel object
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the Submodel
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
    put:
      operationId: put_submodel
      parameters:
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submodel'
        description: Submodel object
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the Submodel
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel-descriptors:
    get:
      operationId: get_all_submodel_descriptors
      parameters:
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelDescriptorsResult'
          description: Requested Submodel Descriptors
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all Submodel Descriptors
      tags:
      - Submodel Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelDescriptors/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_registry_api_controller
    post:
      operationId: post_submodel_descriptor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelDescriptor'
        description: Submodel Descriptor object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelDescriptor'
          description: Submodel Descriptor created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: "Creates a new Submodel Descriptor, i.e. registers a submodel"
      tags:
      - Submodel Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelDescriptor/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_registry_api_controller
  /submodel-descriptors/{submodelIdentifier}:
    delete:
      operationId: delete_submodel_descriptor_by_id
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "204":
          description: Submodel Descriptor deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
      summary: "Deletes a Submodel Descriptor, i.e. de-registers a submodel"
      tags:
      - Submodel Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelDescriptorById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_registry_api_controller
    get:
      operationId: get_submodel_descriptor_by_id
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelDescriptor'
          description: Requested Submodel Descriptor
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific Submodel Descriptor
      tags:
      - Submodel Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelDescriptorById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_registry_api_controller
    put:
      operationId: put_submodel_descriptor_by_id
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelDescriptor'
        description: Submodel Descriptor object
        required: true
      responses:
        "204":
          description: Submodel Descriptor updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing Submodel Descriptor
      tags:
      - Submodel Registry API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodelDescriptorById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_registry_api_controller
  /submodel/$metadata:
    get:
      operationId: get_submodel_metadata
      parameters:
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelMetadata'
          description: Requested Submodel in the metadata representation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the metadata attributes of a specific Submodel
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
    patch:
      operationId: patch_submodel_metadata
      parameters:
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelMetadata'
        description: The metadata attributes of the Submodel object
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the metadata attributes of the Submodel
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/$path:
    get:
      operationId: get_submodel_path
      parameters:
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PathItem'
                type: array
          description: Submodel in Path notation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Submodel in the Path notation
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/$reference:
    get:
      operationId: get_submodel_reference
      parameters:
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: Requested Reference
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Reference of the Submodel
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/$value:
    get:
      operationId: get_submodel_value_only
      parameters:
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelValue'
          description: ValueOnly representation of the Submodel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Submodel in the ValueOnly representation
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
    patch:
      operationId: patch_submodel_value_only
      parameters:
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelValue'
        description: Submodel object in its ValueOnly representation
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the values of the Submodel
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements:
    get:
      operationId: get_all_submodel_elements
      parameters:
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsResult'
          description: List of found submodel elements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements including their hierarchy
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
    post:
      operationId: post_submodel_element
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: Requested submodel element
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
          description: Submodel element created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Creates a new submodel element
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelElement/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/$metadata:
    get:
      operationId: get_all_submodel_elements_metadata
      parameters:
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsMetadataResult'
          description: List of found submodel elements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the metadata attributes of all submodel elements including
        their hierarchy
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/$path:
    get:
      operationId: get_all_submodel_elements_path
      parameters:
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPathItemsResult'
          description: List of found submodel elements in the Path notation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements including their hierarchy in the Path
        notation
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/$reference:
    get:
      operationId: get_all_submodel_elements_reference
      parameters:
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReferencesResult'
          description: List of found submodel elements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the References of all submodel elements
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/$value:
    get:
      operationId: get_all_submodel_elements_value_only
      parameters:
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsValueResult'
          description: List of found submodel elements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements including their hierarchy in the ValueOnly
        representation
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/{idShortPath}:
    delete:
      operationId: delete_submodel_element_by_path
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Submodel element deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes a submodel element at a specified path within the submodel
        elements hierarchy
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
    get:
      operationId: get_submodel_element_by_path
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
          description: Requested submodel element
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific submodel element from the Submodel at a specified
        path
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
    patch:
      operationId: patch_submodel_element_by_path
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: SubmodelElement object
        required: true
      responses:
        "204":
          description: SubmodelElement updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing SubmodelElement
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
    post:
      operationId: post_submodel_element_by_path
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: Requested submodel element
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
          description: Submodel element created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Creates a new submodel element at a specified path within submodel
        elements hierarchy
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
    put:
      operationId: put_submodel_element_by_path
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: Requested submodel element
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing submodel element at a specified path within submodel
        elements hierarchy
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodelElementByPath/3/0
      - https://admin-shell.io/aas/API/SetSubmodelElementValueByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/{idShortPath}/$metadata:
    get:
      operationId: get_submodel_element_by_path_metadata
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElementMetadata'
          description: Metadata attributes of the requested submodel element
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the matadata attributes of a specific submodel element from
        the Submodel at a specified path
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
    patch:
      operationId: patch_submodel_element_by_path_metadata
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSubmodelElementsMetadataResult'
        description: Metadata attributes of the SubmodelElement
        required: true
      responses:
        "204":
          description: SubmodelElement updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the metadata attributes an existing SubmodelElement
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/{idShortPath}/$path:
    get:
      operationId: get_submodel_element_by_path_path
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathItem'
          description: Requested submodel element
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific submodel element from the Submodel at a specified
        path in the Path notation
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/{idShortPath}/$reference:
    get:
      operationId: get_submodel_element_by_path_reference
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: Requested submodel element
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Referene of a specific submodel element from the Submodel
        at a specified path
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/{idShortPath}/$value:
    get:
      operationId: get_submodel_element_by_path_value_only
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElementValue'
          description: Requested submodel element
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific submodel element from the Submodel at a specified
        path in the ValueOnly representation
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
    patch:
      operationId: patch_submodel_element_by_path_value_only
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSubmodelElementsValueResult'
        description: The SubmodelElement in its ValueOnly representation
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the value of an existing SubmodelElement
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/{idShortPath}/attachment:
    delete:
      operationId: delete_file_by_path
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes file content of an existing submodel element at a specified
        path within submodel elements hierarchy
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteFileByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
    get:
      operationId: get_file_by_path
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Requested file
          headers:
            Content-Disposition:
              description: In order to physically download the file usually set to
                attachment with a filename
              example: attachment; filename="filename.jpg"
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Method not allowed - Download only valid for File submodel
            element
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Downloads file content from a specific submodel element from the Submodel
        at a specified path
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetFileByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
    put:
      operationId: put_file_by_path
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/idShortPath_attachment_body_1'
        description: File to upload
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Method not allowed - Upload only valid for File submodel element
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Uploads file content to an existing submodel element at a specified
        path within submodel elements hierarchy
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutFileByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/{idShortPath}/invoke:
    post:
      operationId: invoke_operation
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
        description: Operation request object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Method not allowed - Invoke only valid for Operation submodel
            element
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Synchronously invokes an Operation at a specified path
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationSync/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/{idShortPath}/invoke-async:
    post:
      operationId: invoke_operation_async
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
        description: Operation request object
        required: true
      responses:
        "202":
          description: The server has accepted the request.
          headers:
            Location:
              description: The URL where the client can find more information about
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Method not allowed - Invoke only valid for Operation submodel
            element
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Asynchronously invokes an Operation at a specified path
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationAsync/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/{idShortPath}/invoke-async/$value:
    post:
      operationId: invoke_operation_async_value_only
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequestValueOnly'
        description: Operation request object
        required: true
      responses:
        "202":
          description: The server has accepted the request.
          headers:
            Location:
              description: The URL where the client can find more information about
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Method not allowed - Invoke only valid for Operation submodel
            element
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Asynchronously invokes an Operation at a specified path
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationAsync/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/{idShortPath}/invoke/$value:
    post:
      operationId: invoke_operation_sync_value_only
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequestValueOnly'
        description: Operation request object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultValueOnly'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Method not allowed - Invoke only valid for Operation submodel
            element
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Synchronously invokes an Operation at a specified path
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationSync/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/{idShortPath}/operation-results/{handleId}:
    get:
      operationId: get_operation_async_result
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: The returned handle id of an operation’s asynchronous invocation
          used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: handleId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Operation result of an asynchronous invoked Operation
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncResult/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/{idShortPath}/operation-results/{handleId}/$value:
    get:
      operationId: get_operation_async_result_value_only
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: The returned handle id of an operation’s asynchronous invocation
          used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: handleId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultValueOnly'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the value of the Operation result of an asynchronous invoked
        Operation
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncResult/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodel/submodel-elements/{idShortPath}/operation-status/{handleId}:
    get:
      operationId: get_operation_async_status
      parameters:
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: The returned handle id of an operation’s asynchronous invocation
          used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: handleId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseOperationResult'
          description: Operation result object containing information that the 'executionState'
            is still 'Running'
        "302":
          description: The target resource is available but at a different location.
          headers:
            Location:
              description: The URL where the client can find the target resource.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Operation status of an asynchronous invoked Operation
      tags:
      - Submodel API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncStatus/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_api_controller
  /submodels:
    get:
      operationId: get_all_submodels
      parameters:
      - description: The value of the semantic id reference (BASE64-URL-encoded)
        explode: true
        in: query
        name: semanticId
        required: false
        schema:
          maxLength: 3072
          minLength: 1
          type: string
        style: form
      - description: The Asset Administration Shell’s IdShort
        explode: true
        in: query
        name: idShort
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelsResult'
          description: Requested Submodels
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all Submodels
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodels/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsBySupplementalSemanticId/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    post:
      operationId: post_submodel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submodel'
        description: Submodel object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submodel'
          description: Submodel created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Creates a new Submodel
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodel/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/$metadata:
    get:
      operationId: get_all_submodels_metadata
      parameters:
      - description: The value of the semantic id reference (BASE64-URL-encoded)
        explode: true
        in: query
        name: semanticId
        required: false
        schema:
          maxLength: 3072
          minLength: 1
          type: string
        style: form
      - description: The Asset Administration Shell’s IdShort
        explode: true
        in: query
        name: idShort
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelsMetadataResult'
          description: Requested Submodels
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the metadata attributes of all Submodels
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodels/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsBySupplementalSemanticId/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/$path:
    get:
      operationId: get_all_submodels_path
      parameters:
      - description: The value of the semantic id reference (BASE64-URL-encoded)
        explode: true
        in: query
        name: semanticId
        required: false
        schema:
          maxLength: 3072
          minLength: 1
          type: string
        style: form
      - description: The Asset Administration Shell’s IdShort
        explode: true
        in: query
        name: idShort
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPathItemsResult'
          description: Requested Submodels
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all Submodels in the Path notation
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodels/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsBySupplementalSemanticId/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/$reference:
    get:
      operationId: get_all_submodels_reference
      parameters:
      - description: The value of the semantic id reference (BASE64-URL-encoded)
        explode: true
        in: query
        name: semanticId
        required: false
        schema:
          maxLength: 3072
          minLength: 1
          type: string
        style: form
      - description: The Asset Administration Shell’s IdShort
        explode: true
        in: query
        name: idShort
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReferencesResult'
          description: References of the requested Submodels
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the References for all Submodels
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodels/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsBySupplementalSemanticId/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/$value:
    get:
      operationId: get_all_submodels_value_only
      parameters:
      - description: The value of the semantic id reference (BASE64-URL-encoded)
        explode: true
        in: query
        name: semanticId
        required: false
        schema:
          maxLength: 3072
          minLength: 1
          type: string
        style: form
      - description: The Asset Administration Shell’s IdShort
        explode: true
        in: query
        name: idShort
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelsValueResult'
          description: Requested Submodels
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all Submodels in their ValueOnly representation
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodels/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsBySemanticId/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsBySupplementalSemanticId/3/0
      - https://admin-shell.io/aas/API/GetAllSubmodelsByIdShort/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}:
    delete:
      operationId: delete_submodel_by_id
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "204":
          description: Submodel deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes a Submodel
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    get:
      operationId: get_submodel_by_id
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submodel'
          description: Requested Submodel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific Submodel
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    patch:
      operationId: patch_submodel_by_id
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submodel'
        description: Submodel object
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing Submodel
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    put:
      operationId: put_submodel_by_id
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submodel'
        description: Submodel object
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing Submodel
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/$metadata:
    get:
      operationId: get_submodel_by_id_metadata
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelMetadata'
          description: Requested Submodel in the metadata representation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the metadata attributes of a specific Submodel
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    patch:
      operationId: patch_submodel_by_id_metadata
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelMetadata'
        description: The metadata attributes of the Submodel object
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the metadata attributes of an existing Submodel
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/$path:
    get:
      operationId: get_submodel_by_id_path
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PathItem'
                type: array
          description: Requested Submodel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific Submodel in the Path notation
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/$reference:
    get:
      operationId: get_submodel_by_id_reference
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: Requested Submodel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Reference of a specific Submodel
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/$value:
    get:
      operationId: get_submodel_by_id_value_only
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelValue'
          description: Requested Submodel
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific Submodel in the ValueOnly representation
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    patch:
      operationId: patch_submodel_by_id_value_only
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelValue'
        description: Submodel object in its ValueOnly representation
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the values of an existing Submodel
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements:
    get:
      operationId: get_all_submodel_elements_submodel_repository
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsResult'
          description: List of found submodel elements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements including their hierarchy
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    post:
      operationId: post_submodel_element_submodel_repository
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: Requested submodel element
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
          description: Submodel element created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Creates a new submodel element
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelElement/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/$metadata:
    get:
      operationId: get_all_submodel_elements_metadata_submodel_repository
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsMetadataResult'
          description: List of found submodel elements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the metadata attributes of all submodel elements including
        their hierarchy
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/$path:
    get:
      operationId: get_all_submodel_elements_path_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPathItemsResult'
          description: List of found submodel elements in the Path notation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements including their hierarchy in the Path
        notation
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/$reference:
    get:
      operationId: get_all_submodel_elements_reference_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReferencesResult'
          description: List of found submodel elements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the References of all submodel elements
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/$value:
    get:
      operationId: get_all_submodel_elements_value_only_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The maximum number of elements in the response array
        explode: true
        in: query
        name: limit
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: A server-generated identifier retrieved from pagingMetadata that
          specifies from which position the result listing should continue
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmodelElementsValueResult'
          description: List of found submodel elements
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns all submodel elements including their hierarchy in the ValueOnly
        representation
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetAllSubmodelElements/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/{idShortPath}:
    delete:
      operationId: delete_submodel_element_by_path_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Submodel element deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes a submodel element at a specified path within the submodel
        elements hierarchy
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    get:
      operationId: get_submodel_element_by_path_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
          description: Requested submodel element
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific submodel element from the Submodel at a specified
        path
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    patch:
      operationId: patch_submodel_element_by_path_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: SubmodelElement object
        required: true
      responses:
        "204":
          description: SubmodelElement updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing SubmodelElement
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelById/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    post:
      operationId: post_submodel_element_by_path_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: Requested submodel element
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElement'
          description: Submodel element created successfully
          headers:
            Location:
              description: URL of the newly created resource
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Conflict, a resource which shall be created exists already.\
            \ Might be thrown if a Submodel or SubmodelElement with the same ShortId\
            \ is contained in a POST request."
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Creates a new submodel element at a specified path within submodel
        elements hierarchy
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PostSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    put:
      operationId: put_submodel_element_by_path_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElement'
        description: Requested submodel element
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates an existing submodel element at a specified path within submodel
        elements hierarchy
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutSubmodelElementByPath/3/0
      - https://admin-shell.io/aas/API/SetSubmodelElementValueByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$metadata:
    get:
      operationId: get_submodel_element_by_path_metadata_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElementMetadata'
          description: Metadata attributes of the requested submodel element
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the matadata attributes of a specific submodel element from
        the Submodel at a specified path
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    patch:
      operationId: patch_submodel_element_by_path_metadata_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElementMetadata'
        description: Metadata attributes of the SubmodelElement
        required: true
      responses:
        "204":
          description: SubmodelElement updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the metadata attributes an existing SubmodelElement
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$path:
    get:
      operationId: get_submodel_element_by_path_path_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PathItem'
                type: array
          description: Requested submodel element
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific submodel element from the Submodel at a specified
        path in the Path notation
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$reference:
    get:
      operationId: get_submodel_element_by_path_reference_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reference'
          description: Requested submodel element
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Referene of a specific submodel element from the Submodel
        at a specified path
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/$value:
    get:
      operationId: get_submodel_element_by_path_value_only_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: deep
          enum:
          - deep
          - core
          type: string
        style: form
      - description: Determines to which extent the resource is being serialized
        explode: true
        in: query
        name: extent
        required: false
        schema:
          default: withoutBlobValue
          enum:
          - withBlobValue
          - withoutBlobValue
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmodelElementValue'
          description: Requested submodel element
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns a specific submodel element from the Submodel at a specified
        path in the ValueOnly representation
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    patch:
      operationId: patch_submodel_element_by_path_value_only_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines the structural depth of the respective resource content
        explode: true
        in: query
        name: level
        required: false
        schema:
          default: core
          enum:
          - core
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmodelElementValue'
        description: The SubmodelElement in its ValueOnly representation
        required: true
      responses:
        "204":
          description: Submodel updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Updates the value of an existing SubmodelElement
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PatchSubmodelElementByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/attachment:
    delete:
      operationId: delete_file_by_path_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Deletes file content of an existing submodel element at a specified
        path within submodel elements hierarchy
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/DeleteFileByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    get:
      operationId: get_file_by_path_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Requested file
          headers:
            Content-Disposition:
              description: In order to physically download the file usually set to
                attachment with a filename
              example: attachment; filename="filename.jpg"
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Method not allowed - Download only valid for File submodel
            element
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Downloads file content from a specific submodel element from the Submodel
        at a specified path
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetFileByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
    put:
      operationId: put_file_by_path_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: application/octet-stream
                style: form
            schema:
              $ref: '#/components/schemas/idShortPath_attachment_body_3'
        description: File to upload
        required: true
      responses:
        "204":
          description: Submodel element updated successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Method not allowed - Upload only valid for File submodel element
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Uploads file content to an existing submodel element at a specified
        path within submodel elements hierarchy
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/PutFileByPath/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke:
    post:
      operationId: invoke_operation_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines whether an operation invocation is performed asynchronously
          or synchronously
        explode: true
        in: query
        name: async
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
        description: Operation request object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Method not allowed - Invoke only valid for Operation submodel
            element
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Synchronously invokes an Operation at a specified path
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationSync/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke-async:
    post:
      operationId: invoke_operation_async_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
        description: Operation request object
        required: true
      responses:
        "202":
          description: The server has accepted the request.
          headers:
            Location:
              description: The URL where the client can find more information about
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Method not allowed - Invoke only valid for Operation submodel
            element
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Asynchronously invokes an Operation at a specified path
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationAsync/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke-async/$value:
    post:
      operationId: invoke_operation_async_value_only_submodel_repo
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequestValueOnly'
        description: Operation request object
        required: true
      responses:
        "202":
          description: The server has accepted the request.
          headers:
            Location:
              description: The URL where the client can find more information about
                the request.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Asynchronously invokes an Operation at a specified path
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationAsync/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/invoke/$value:
    post:
      operationId: invoke_operation_value_only_submodel_repo
      parameters:
      - description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: aasIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: Determines whether an operation invocation is performed asynchronously
          or synchronously
        explode: true
        in: query
        name: async
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequestValueOnly'
        description: Operation request object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultValueOnly'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Synchronously invokes an Operation at a specified path
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/InvokeOperationSync/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/operation-results/{handleId}:
    get:
      operationId: get_operation_async_result_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: The returned handle id of an operation’s asynchronous invocation
          used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: handleId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
          description: Operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Operation result of an asynchronous invoked Operation
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncResult/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/operation-results/{handleId}/$value:
    get:
      operationId: get_operation_async_result_value_only_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: The returned handle id of an operation’s asynchronous invocation
          used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: handleId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResultValueOnly'
          description: Value of the operation result object
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Operation result of an asynchronous invoked Operation
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncResult/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
  /submodels/{submodelIdentifier}/submodel-elements/{idShortPath}/operation-status/{handleId}:
    get:
      operationId: get_operation_async_status_submodel_repo
      parameters:
      - description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: submodelIdentifier
        required: true
        schema:
          format: byte
          type: string
        style: simple
      - description: IdShort path to the submodel element (dot-separated)
        explode: false
        in: path
        name: idShortPath
        required: true
        schema:
          type: string
        style: simple
      - description: The returned handle id of an operation’s asynchronous invocation
          used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
        explode: false
        in: path
        name: handleId
        required: true
        schema:
          format: byte
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
          description: Operation status object
        "302":
          description: The target resource is available but at a different location.
          headers:
            Location:
              description: The URL where the client can find the target resource.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Bad Request, e.g. the request parameters of the format of\
            \ the request body is wrong."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: "Unauthorized, e.g. the server refused the authorization attempt."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Internal Server Error
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: Default error handling for unmentioned status codes
      summary: Returns the Operation status of an asynchronous invoked Operation
      tags:
      - Submodel Repository API
      x-semanticIds:
      - https://admin-shell.io/aas/API/GetOperationAsyncStatus/3/0
      x-openapi-router-controller: openapi_server.controllers.submodel_repository_api_controller
components:
  parameters:
    Limit:
      description: The maximum number of elements in the response array
      explode: true
      in: query
      name: limit
      required: false
      schema:
        minimum: 1
        type: integer
      style: form
    Cursor:
      description: A server-generated identifier retrieved from pagingMetadata that
        specifies from which position the result listing should continue
      explode: true
      in: query
      name: cursor
      required: false
      schema:
        type: string
      style: form
    SubmodelIdentifier:
      description: The Submodel’s unique id (UTF8-BASE64-URL-encoded)
      explode: false
      in: path
      name: submodelIdentifier
      required: true
      schema:
        format: byte
        type: string
      style: simple
    Level:
      description: Determines the structural depth of the respective resource content
      explode: true
      in: query
      name: level
      required: false
      schema:
        default: deep
        enum:
        - deep
        - core
        type: string
      style: form
    Extent:
      description: Determines to which extent the resource is being serialized
      explode: true
      in: query
      name: extent
      required: false
      schema:
        default: withoutBlobValue
        enum:
        - withBlobValue
        - withoutBlobValue
        type: string
      style: form
    IdShortPath:
      description: IdShort path to the submodel element (dot-separated)
      explode: false
      in: path
      name: idShortPath
      required: true
      schema:
        type: string
      style: simple
    AssetAdministrationShellIdentifier:
      description: The Asset Administration Shell’s unique id (UTF8-BASE64-URL-encoded)
      explode: false
      in: path
      name: aasIdentifier
      required: true
      schema:
        format: byte
        type: string
      style: simple
    HandleId:
      description: The returned handle id of an operation’s asynchronous invocation
        used to request the current state of the operation’s execution (UTF8-BASE64-URL-encoded)
      explode: false
      in: path
      name: handleId
      required: true
      schema:
        format: byte
        type: string
      style: simple
    AssetIds:
      description: "A list of specific Asset identifiers. Each Asset identifier is\
        \ a base64-url-encoded [SpecificAssetId](https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0.1#/components/schemas/SpecificAssetId)"
      explode: true
      in: query
      name: assetIds
      required: false
      schema:
        example: ?assetIds=eyAibmFtZSI6ICJzb21lLWFzc2V0LWlkIiwgInZhbHVlIjogImh0dHA6Ly9leGFtcGxlLWNvbXBhbnkuY29tL215QXNzZXQiLCAiZXh0ZXJuYWxTdWJqZWN0SWQiOiB7ICJrZXlzIjogWyB7ICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIsICJ2YWx1ZSI6ICJodHRwOi8vZXhhbXBsZS1jb21wYW55LmNvbS9leGFtcGxlLWNvbXBhbnlzLWFzc2V0LWtleXMiIH0gXSwgInR5cGUiOiAiR2xvYmFsUmVmZXJlbmNlIiB9IH0&assetIds=eyAibmFtZSI6ICJzb21lLW90aGVyLWFzc2V0LWlkIiwgInZhbHVlIjogIjEyMzQ1QUJDIiwgImV4dGVybmFsU3ViamVjdElkIjogeyAia2V5cyI6IFsgeyAidHlwZSI6ICJHbG9iYWxSZWZlcmVuY2UiLCAidmFsdWUiOiAiaHR0cDovL215LW93bi1jb21wYW55LmNvbS9rZXlzIiB9IF0sICJ0eXBlIjogIkdsb2JhbFJlZmVyZW5jZSIgfSB9
        items:
          format: byte
          type: string
        type: array
      style: form
    IdShort:
      description: The Asset Administration Shell’s IdShort
      explode: true
      in: query
      name: idShort
      required: false
      schema:
        type: string
      style: form
    SemanticId:
      description: The value of the semantic id reference (BASE64-URL-encoded)
      explode: true
      in: query
      name: semanticId
      required: false
      schema:
        maxLength: 3072
        minLength: 1
        type: string
      style: form
    AssetKind:
      description: The Asset's kind (Instance or Type)
      explode: true
      in: query
      name: assetKind
      required: false
      schema:
        $ref: '#/components/schemas/AssetKind'
      style: form
    AssetType:
      description: The Asset's type (UTF8-BASE64-URL-encoded)
      explode: true
      in: query
      name: assetType
      required: false
      schema:
        maxLength: 2000
        minLength: 1
        pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\U00010000-\\U0010FFFF]*$"
        type: string
      style: form
  responses:
    bad-request:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
      description: "Bad Request, e.g. the request parameters of the format of the\
        \ request body is wrong."
    forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
      description: Forbidden
    internal-server-error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
      description: Internal Server Error
    default:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
      description: Default error handling for unmentioned status codes
    not-found:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
      description: Not Found
    conflict:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
      description: "Conflict, a resource which shall be created exists already. Might\
        \ be thrown if a Submodel or SubmodelElement with the same ShortId is contained\
        \ in a POST request."
    accepted:
      description: The server has accepted the request.
      headers:
        Location:
          description: The URL where the client can find more information about the
            request.
          explode: false
          schema:
            type: string
          style: simple
    found:
      description: The target resource is available but at a different location.
      headers:
        Location:
          description: The URL where the client can find the target resource.
          explode: false
          schema:
            type: string
          style: simple
    unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Result'
      description: "Unauthorized, e.g. the server refused the authorization attempt."
  schemas:
    AssetAdministrationShell:
      allOf:
      - $ref: '#/components/schemas/Identifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - properties:
          derivedFrom:
            $ref: '#/components/schemas/Reference'
          assetInformation:
            $ref: '#/components/schemas/AssetInformation'
          submodels:
            items:
              $ref: '#/components/schemas/Reference'
            minItems: 1
            type: array
          modelType:
            pattern: AssetAdministrationShell
            type: string
        required:
        - assetInformation
      title: AssetAdministrationShell
    Identifiable:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - properties:
          administration:
            $ref: '#/components/schemas/AdministrativeInformation'
          id:
            maxLength: 2000
            minLength: 1
            pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
        required:
        - id
      title: Identifiable
    Referable:
      allOf:
      - $ref: '#/components/schemas/HasExtensions'
      - properties:
          category:
            maxLength: 128
            minLength: 1
            pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          idShort:
            allOf:
            - maxLength: 128
              minLength: 1
            - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
                udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            - pattern: "^[a-zA-Z][a-zA-Z0-9_]*$"
            type: string
          displayName:
            items:
              $ref: '#/components/schemas/LangStringNameType'
            minItems: 1
            type: array
          description:
            items:
              $ref: '#/components/schemas/LangStringTextType'
            minItems: 1
            type: array
          modelType:
            $ref: '#/components/schemas/ModelType'
        required:
        - modelType
      title: Referable
    HasExtensions:
      properties:
        extensions:
          items:
            $ref: '#/components/schemas/Extension'
          minItems: 1
          title: extensions
          type: array
      title: HasExtensions
      type: object
    Extension:
      allOf:
      - $ref: '#/components/schemas/HasSemantics'
      - properties:
          name:
            maxLength: 128
            minLength: 1
            pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          valueType:
            $ref: '#/components/schemas/DataTypeDefXsd'
          value:
            type: string
          refersTo:
            items:
              $ref: '#/components/schemas/Reference'
            minItems: 1
            type: array
        required:
        - name
      title: Extension
    HasSemantics:
      properties:
        semanticId:
          $ref: '#/components/schemas/Reference'
        supplementalSemanticIds:
          items:
            $ref: '#/components/schemas/Reference'
          minItems: 1
          title: supplementalSemanticIds
          type: array
      title: HasSemantics
      type: object
    Reference:
      allOf:
      - $ref: '#/components/schemas/ReferenceParent'
      - properties:
          referredSemanticId:
            $ref: '#/components/schemas/ReferenceParent'
      title: Reference
    ReferenceParent:
      properties:
        type:
          $ref: '#/components/schemas/ReferenceTypes'
        keys:
          items:
            $ref: '#/components/schemas/Key'
          minItems: 1
          title: keys
          type: array
      required:
      - keys
      - type
      title: ReferenceParent
      type: object
    ReferenceTypes:
      enum:
      - ExternalReference
      - ModelReference
      title: ReferenceTypes
      type: string
    Key:
      properties:
        type:
          $ref: '#/components/schemas/KeyTypes'
        value:
          maxLength: 2000
          minLength: 1
          pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
            udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          title: value
          type: string
      required:
      - type
      - value
      title: Key
      type: object
    KeyTypes:
      enum:
      - AnnotatedRelationshipElement
      - AssetAdministrationShell
      - BasicEventElement
      - Blob
      - Capability
      - ConceptDescription
      - DataElement
      - Entity
      - EventElement
      - File
      - FragmentReference
      - GlobalReference
      - Identifiable
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - Referable
      - ReferenceElement
      - RelationshipElement
      - Submodel
      - SubmodelElement
      - SubmodelElementCollection
      - SubmodelElementList
      title: KeyTypes
      type: string
    DataTypeDefXsd:
      enum:
      - xs:anyURI
      - xs:base64Binary
      - xs:boolean
      - xs:byte
      - xs:date
      - xs:dateTime
      - xs:decimal
      - xs:double
      - xs:duration
      - xs:float
      - xs:gDay
      - xs:gMonth
      - xs:gMonthDay
      - xs:gYear
      - xs:gYearMonth
      - xs:hexBinary
      - xs:int
      - xs:integer
      - xs:long
      - xs:negativeInteger
      - xs:nonNegativeInteger
      - xs:nonPositiveInteger
      - xs:positiveInteger
      - xs:short
      - xs:string
      - xs:time
      - xs:unsignedByte
      - xs:unsignedInt
      - xs:unsignedLong
      - xs:unsignedShort
      title: DataTypeDefXsd
      type: string
    LangStringNameType:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - properties:
          text:
            maxLength: 128
      title: LangStringNameType
    AbstractLangString:
      properties:
        language:
          pattern: "^(([a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){2})?|[a-zA-Z]{4}|[a-zA-Z]{5,8})(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-(([a-zA-Z0-9]){5,8}|[0-9]([a-zA-Z0-9]){3}))*(-[0-9A-WY-Za-wy-z](-([a-zA-Z0-9]){2,8})+)*(-[xX](-([a-zA-Z0-9]){1,8})+)?|[xX](-([a-zA-Z0-9]){1,8})+|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$"
          title: language
          type: string
        text:
          minLength: 1
          pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
            udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          title: text
          type: string
      required:
      - language
      - text
      title: AbstractLangString
      type: object
    LangStringTextType:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - properties:
          text:
            maxLength: 1023
      title: LangStringTextType
    ModelType:
      enum:
      - AnnotatedRelationshipElement
      - AssetAdministrationShell
      - BasicEventElement
      - Blob
      - Capability
      - ConceptDescription
      - DataSpecificationIec61360
      - Entity
      - File
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - ReferenceElement
      - RelationshipElement
      - Submodel
      - SubmodelElementCollection
      - SubmodelElementList
      title: ModelType
      type: string
    AdministrativeInformation:
      allOf:
      - $ref: '#/components/schemas/HasDataSpecification'
      - properties:
          version:
            allOf:
            - maxLength: 4
              minLength: 1
            - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
                udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            - pattern: "^(0|[1-9][0-9]*)$"
            type: string
          revision:
            allOf:
            - maxLength: 4
              minLength: 1
            - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
                udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            - pattern: "^(0|[1-9][0-9]*)$"
            type: string
          creator:
            $ref: '#/components/schemas/Reference'
          templateId:
            maxLength: 2000
            minLength: 1
            pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
      title: AdministrativeInformation
    HasDataSpecification:
      properties:
        embeddedDataSpecifications:
          items:
            $ref: '#/components/schemas/EmbeddedDataSpecification'
          minItems: 1
          title: embeddedDataSpecifications
          type: array
      title: HasDataSpecification
      type: object
    EmbeddedDataSpecification:
      properties:
        dataSpecification:
          $ref: '#/components/schemas/Reference'
        dataSpecificationContent:
          $ref: '#/components/schemas/DataSpecificationContent_choice'
      required:
      - dataSpecification
      - dataSpecificationContent
      title: EmbeddedDataSpecification
      type: object
    DataSpecificationContent_choice:
      oneOf:
      - $ref: '#/components/schemas/DataSpecificationIec61360'
      title: DataSpecificationContent_choice
    DataSpecificationIec61360:
      allOf:
      - $ref: '#/components/schemas/DataSpecificationContent'
      - properties:
          preferredName:
            items:
              $ref: '#/components/schemas/LangStringPreferredNameTypeIec61360'
            minItems: 1
            type: array
          shortName:
            items:
              $ref: '#/components/schemas/LangStringShortNameTypeIec61360'
            minItems: 1
            type: array
          unit:
            minLength: 1
            pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          unitId:
            $ref: '#/components/schemas/Reference'
          sourceOfDefinition:
            minLength: 1
            pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          symbol:
            minLength: 1
            pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          dataType:
            $ref: '#/components/schemas/DataTypeIec61360'
          definition:
            items:
              $ref: '#/components/schemas/LangStringDefinitionTypeIec61360'
            minItems: 1
            type: array
          valueFormat:
            minLength: 1
            pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          valueList:
            $ref: '#/components/schemas/ValueList'
          value:
            maxLength: 2000
            minLength: 1
            pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          levelType:
            $ref: '#/components/schemas/LevelType'
          modelType:
            pattern: DataSpecificationIec61360
            type: string
        required:
        - preferredName
      title: DataSpecificationIec61360
    DataSpecificationContent:
      properties:
        modelType:
          $ref: '#/components/schemas/ModelType'
      required:
      - modelType
      title: DataSpecificationContent
      type: object
    LangStringPreferredNameTypeIec61360:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - properties:
          text:
            maxLength: 255
      title: LangStringPreferredNameTypeIec61360
    LangStringShortNameTypeIec61360:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - properties:
          text:
            maxLength: 18
      title: LangStringShortNameTypeIec61360
    DataTypeIec61360:
      enum:
      - BLOB
      - BOOLEAN
      - DATE
      - FILE
      - HTML
      - INTEGER_COUNT
      - INTEGER_CURRENCY
      - INTEGER_MEASURE
      - IRDI
      - IRI
      - RATIONAL
      - RATIONAL_MEASURE
      - REAL_COUNT
      - REAL_CURRENCY
      - REAL_MEASURE
      - STRING
      - STRING_TRANSLATABLE
      - TIME
      - TIMESTAMP
      title: DataTypeIec61360
      type: string
    LangStringDefinitionTypeIec61360:
      allOf:
      - $ref: '#/components/schemas/AbstractLangString'
      - properties:
          text:
            maxLength: 1023
      title: LangStringDefinitionTypeIec61360
    ValueList:
      properties:
        valueReferencePairs:
          items:
            $ref: '#/components/schemas/ValueReferencePair'
          minItems: 1
          title: valueReferencePairs
          type: array
      required:
      - valueReferencePairs
      title: ValueList
      type: object
    ValueReferencePair:
      properties:
        value:
          maxLength: 2000
          minLength: 1
          pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
            udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          title: value
          type: string
        valueId:
          $ref: '#/components/schemas/Reference'
      required:
      - value
      - valueId
      title: ValueReferencePair
      type: object
    LevelType:
      properties:
        min:
          title: min
          type: boolean
        nom:
          title: nom
          type: boolean
        typ:
          title: typ
          type: boolean
        max:
          title: max
          type: boolean
      required:
      - max
      - min
      - nom
      - typ
      title: LevelType
      type: object
    AssetInformation:
      example:
        assetKind: null
        specificAssetIds:
        - null
        - null
        defaultThumbnail:
          path: path
          contentType: contentType
        globalAssetId: globalAssetId
        assetType: assetType
      properties:
        assetKind:
          $ref: '#/components/schemas/AssetKind'
        globalAssetId:
          maxLength: 2000
          minLength: 1
          pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
            udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          title: globalAssetId
          type: string
        specificAssetIds:
          items:
            $ref: '#/components/schemas/SpecificAssetId'
          minItems: 1
          title: specificAssetIds
          type: array
        assetType:
          maxLength: 2000
          minLength: 1
          pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
            udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          title: assetType
          type: string
        defaultThumbnail:
          $ref: '#/components/schemas/Resource'
      required:
      - assetKind
      title: AssetInformation
      type: object
    AssetKind:
      enum:
      - Instance
      - NotApplicable
      - Type
      title: AssetKind
      type: string
    SpecificAssetId:
      allOf:
      - $ref: '#/components/schemas/HasSemantics'
      - properties:
          name:
            maxLength: 64
            minLength: 1
            pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          value:
            maxLength: 2000
            minLength: 1
            pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          externalSubjectId:
            $ref: '#/components/schemas/Reference'
        required:
        - name
        - value
      title: SpecificAssetId
    Resource:
      example:
        path: path
        contentType: contentType
      properties:
        path:
          allOf:
          - maxLength: 2000
            minLength: 1
          - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          - pattern: "^file:(//((localhost|(\\[((([0-9A-Fa-f]{1,4}:){6}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|::([0-9A-Fa-f]{1,4}:){5}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|([0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){4}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){3}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){2}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){2}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){4}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(([0-9A-Fa-f]{1,4}:){6}[0-9A-Fa-f]{1,4})?::)|[vV][0-9A-Fa-f]+\\\
              .([a-zA-Z0-9\\-._~]|[!$&'()*+,;=]|:)+)\\]|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
              .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|([a-zA-Z0-9\\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=])*)))?/((([a-zA-Z0-9\\\
              -._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))+(/(([a-zA-Z0-9\\\
              -._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))*)*)?|/((([a-zA-Z0-9\\\
              -._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))+(/(([a-zA-Z0-9\\\
              -._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))*)*)?)$"
          title: path
          type: string
        contentType:
          allOf:
          - maxLength: 100
            minLength: 1
          - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
          - pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([\
              \ \\t]*;[ \\t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"\
              (([\\t !#-\\[\\]-~]|[-ÿ])|\\\\([\\t !-~]|[-ÿ]))*\"))*$"
          title: contentType
          type: string
      required:
      - path
      title: Resource
      type: object
    Result:
      properties:
        messages:
          items:
            $ref: '#/components/schemas/Message'
          title: messages
          type: array
      title: Result
      type: object
    Message:
      properties:
        code:
          maxLength: 32
          minLength: 1
          title: code
          type: string
        correlationId:
          maxLength: 128
          minLength: 1
          title: correlationId
          type: string
        messageType:
          enum:
          - Undefined
          - Info
          - Warning
          - Error
          - Exception
          title: messageType
          type: string
        text:
          title: text
          type: string
        timestamp:
          pattern: "^-?(([1-9][0-9][0-9][0-9]+)|(0[0-9][0-9][0-9]))-((0[1-9])|(1[0-2]))-((0[1-9])|([12][0-9])|(3[01]))T(((([01][0-9])|(2[0-3])):[0-5][0-9]:([0-5][0-9])(\\\
            .[0-9]+)?)|24:00:00(\\.0+)?)(Z|\\+00:00|-00:00)$"
          title: timestamp
          type: string
      title: Message
      type: object
    GetReferencesResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - properties:
          result:
            items:
              $ref: '#/components/schemas/Reference'
            type: array
        type: object
      title: GetReferencesResult
    PagedResult:
      properties:
        paging_metadata:
          $ref: '#/components/schemas/PagedResult_paging_metadata'
      title: PagedResult
      type: object
    Submodel:
      allOf:
      - $ref: '#/components/schemas/Identifiable'
      - $ref: '#/components/schemas/HasKind'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - properties:
          submodelElements:
            items:
              $ref: '#/components/schemas/SubmodelElement_choice'
            minItems: 1
            type: array
          modelType:
            pattern: Submodel
            type: string
      title: Submodel
    HasKind:
      properties:
        kind:
          $ref: '#/components/schemas/ModellingKind'
      title: HasKind
      type: object
    ModellingKind:
      enum:
      - Instance
      - Template
      title: ModellingKind
      type: string
    Qualifiable:
      properties:
        qualifiers:
          items:
            $ref: '#/components/schemas/Qualifier'
          minItems: 1
          title: qualifiers
          type: array
        modelType:
          $ref: '#/components/schemas/ModelType'
      required:
      - modelType
      title: Qualifiable
      type: object
    Qualifier:
      allOf:
      - $ref: '#/components/schemas/HasSemantics'
      - properties:
          kind:
            $ref: '#/components/schemas/QualifierKind'
          type:
            maxLength: 128
            minLength: 1
            pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          valueType:
            $ref: '#/components/schemas/DataTypeDefXsd'
          value:
            type: string
          valueId:
            $ref: '#/components/schemas/Reference'
        required:
        - type
        - valueType
      title: Qualifier
    QualifierKind:
      enum:
      - ConceptQualifier
      - TemplateQualifier
      - ValueQualifier
      title: QualifierKind
      type: string
    SubmodelElement_choice:
      oneOf:
      - $ref: '#/components/schemas/RelationshipElement'
      - $ref: '#/components/schemas/AnnotatedRelationshipElement'
      - $ref: '#/components/schemas/BasicEventElement'
      - $ref: '#/components/schemas/Blob'
      - $ref: '#/components/schemas/Capability'
      - $ref: '#/components/schemas/Entity'
      - $ref: '#/components/schemas/File'
      - $ref: '#/components/schemas/MultiLanguageProperty'
      - $ref: '#/components/schemas/Operation'
      - $ref: '#/components/schemas/Property'
      - $ref: '#/components/schemas/Range'
      - $ref: '#/components/schemas/ReferenceElement'
      - $ref: '#/components/schemas/SubmodelElementCollection'
      - $ref: '#/components/schemas/SubmodelElementList'
      title: SubmodelElement_choice
    RelationshipElement:
      allOf:
      - $ref: '#/components/schemas/RelationshipElement_abstract'
      - properties:
          modelType:
            pattern: RelationshipElement
            type: string
      title: RelationshipElement
    RelationshipElement_abstract:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          first:
            $ref: '#/components/schemas/Reference'
          second:
            $ref: '#/components/schemas/Reference'
        required:
        - first
        - second
      title: RelationshipElement_abstract
    SubmodelElement:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
      title: SubmodelElement
    AnnotatedRelationshipElement:
      allOf:
      - $ref: '#/components/schemas/RelationshipElement_abstract'
      - properties:
          annotations:
            items:
              $ref: '#/components/schemas/DataElement_choice'
            minItems: 1
            type: array
          modelType:
            pattern: AnnotatedRelationshipElement
            type: string
      title: AnnotatedRelationshipElement
    DataElement_choice:
      oneOf:
      - $ref: '#/components/schemas/Blob'
      - $ref: '#/components/schemas/File'
      - $ref: '#/components/schemas/MultiLanguageProperty'
      - $ref: '#/components/schemas/Property'
      - $ref: '#/components/schemas/Range'
      - $ref: '#/components/schemas/ReferenceElement'
      title: DataElement_choice
    Blob:
      allOf:
      - $ref: '#/components/schemas/DataElement'
      - properties:
          value:
            format: byte
            type: string
          contentType:
            allOf:
            - maxLength: 100
              minLength: 1
            - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
                udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            - pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([\
                \ \\t]*;[ \\t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"\
                (([\\t !#-\\[\\]-~]|[-ÿ])|\\\\([\\t !-~]|[-ÿ]))*\"))*$"
            type: string
          modelType:
            pattern: Blob
            type: string
        required:
        - contentType
      title: Blob
    DataElement:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      title: DataElement
    File:
      allOf:
      - $ref: '#/components/schemas/DataElement'
      - properties:
          value:
            allOf:
            - maxLength: 2000
              minLength: 1
            - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
                udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            - pattern: "^file:(//((localhost|(\\[((([0-9A-Fa-f]{1,4}:){6}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|::([0-9A-Fa-f]{1,4}:){5}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|([0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){4}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){3}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){2}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:){2}([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){3}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){4}[0-9A-Fa-f]{1,4})?::([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{1,4}|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9A-Fa-f]{1,4}:){5}[0-9A-Fa-f]{1,4})?::[0-9A-Fa-f]{1,4}|(([0-9A-Fa-f]{1,4}:){6}[0-9A-Fa-f]{1,4})?::)|[vV][0-9A-Fa-f]+\\\
                .([a-zA-Z0-9\\-._~]|[!$&'()*+,;=]|:)+)\\]|([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\
                .([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])|([a-zA-Z0-9\\-._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=])*)))?/((([a-zA-Z0-9\\\
                -._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))+(/(([a-zA-Z0-9\\\
                -._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))*)*)?|/((([a-zA-Z0-9\\\
                -._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))+(/(([a-zA-Z0-9\\\
                -._~]|%[0-9A-Fa-f][0-9A-Fa-f]|[!$&'()*+,;=]|[:@]))*)*)?)$"
            type: string
          contentType:
            allOf:
            - maxLength: 100
              minLength: 1
            - pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
                udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            - pattern: "^([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+/([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+([\\\
                t]*;[ \\t]*([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+=(([!#$%&'*+\\-.^_`|~0-9a-zA-Z])+|\"\
                (([\\t!#-\\[\\]-~]|[-ÿ])|\\\\([\\t !-~]|[-ÿ]))*\"))*$"
            type: string
          modelType:
            pattern: File
            type: string
        required:
        - contentType
      title: File
    MultiLanguageProperty:
      allOf:
      - $ref: '#/components/schemas/DataElement'
      - properties:
          value:
            items:
              $ref: '#/components/schemas/LangStringTextType'
            minItems: 1
            type: array
          valueId:
            $ref: '#/components/schemas/Reference'
          modelType:
            pattern: MultiLanguageProperty
            type: string
      title: MultiLanguageProperty
    Property:
      allOf:
      - $ref: '#/components/schemas/DataElement'
      - properties:
          valueType:
            $ref: '#/components/schemas/DataTypeDefXsd'
          value:
            type: string
          valueId:
            $ref: '#/components/schemas/Reference'
          modelType:
            pattern: Property
            type: string
        required:
        - valueType
      title: Property
    Range:
      allOf:
      - $ref: '#/components/schemas/DataElement'
      - properties:
          valueType:
            $ref: '#/components/schemas/DataTypeDefXsd'
          min:
            type: string
          max:
            type: string
          modelType:
            pattern: Range
            type: string
        required:
        - valueType
      title: Range
    ReferenceElement:
      allOf:
      - $ref: '#/components/schemas/DataElement'
      - properties:
          value:
            $ref: '#/components/schemas/Reference'
          modelType:
            pattern: ReferenceElement
            type: string
      title: ReferenceElement
    BasicEventElement:
      allOf:
      - $ref: '#/components/schemas/EventElement'
      - properties:
          observed:
            $ref: '#/components/schemas/Reference'
          direction:
            $ref: '#/components/schemas/Direction'
          state:
            $ref: '#/components/schemas/StateOfEvent'
          messageTopic:
            maxLength: 255
            minLength: 1
            pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          messageBroker:
            $ref: '#/components/schemas/Reference'
          lastUpdate:
            pattern: "^-?(([1-9][0-9][0-9][0-9]+)|(0[0-9][0-9][0-9]))-((0[1-9])|(1[0-2]))-((0[1-9])|([12][0-9])|(3[01]))T(((([01][0-9])|(2[0-3])):[0-5][0-9]:([0-5][0-9])(\\\
              .[0-9]+)?)|24:00:00(\\.0+)?)(Z|\\+00:00|-00:00)$"
            type: string
          minInterval:
            pattern: "^-?P((([0-9]+Y([0-9]+M)?([0-9]+D)?|([0-9]+M)([0-9]+D)?|([0-9]+D))(T(([0-9]+H)([0-9]+M)?([0-9]+(\\\
              .[0-9]+)?S)?|([0-9]+M)([0-9]+(\\.[0-9]+)?S)?|([0-9]+(\\.[0-9]+)?S)))?)|(T(([0-9]+H)([0-9]+M)?([0-9]+(\\\
              .[0-9]+)?S)?|([0-9]+M)([0-9]+(\\.[0-9]+)?S)?|([0-9]+(\\.[0-9]+)?S))))$"
            type: string
          maxInterval:
            pattern: "^-?P((([0-9]+Y([0-9]+M)?([0-9]+D)?|([0-9]+M)([0-9]+D)?|([0-9]+D))(T(([0-9]+H)([0-9]+M)?([0-9]+(\\\
              .[0-9]+)?S)?|([0-9]+M)([0-9]+(\\.[0-9]+)?S)?|([0-9]+(\\.[0-9]+)?S)))?)|(T(([0-9]+H)([0-9]+M)?([0-9]+(\\\
              .[0-9]+)?S)?|([0-9]+M)([0-9]+(\\.[0-9]+)?S)?|([0-9]+(\\.[0-9]+)?S))))$"
            type: string
          modelType:
            pattern: BasicEventElement
            type: string
        required:
        - direction
        - observed
        - state
      title: BasicEventElement
    EventElement:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      title: EventElement
    Direction:
      enum:
      - input
      - output
      title: Direction
      type: string
    StateOfEvent:
      enum:
      - "off"
      - "on"
      title: StateOfEvent
      type: string
    Capability:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          modelType:
            pattern: Capability
            type: string
      title: Capability
    Entity:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          statements:
            items:
              $ref: '#/components/schemas/SubmodelElement_choice'
            minItems: 1
            type: array
          entityType:
            $ref: '#/components/schemas/EntityType'
          globalAssetId:
            maxLength: 2000
            minLength: 1
            pattern: "^([\\t\\n\\r -퟿-�]|\\ud800[\\udc00-\\udfff]|[\\ud801-\\udbfe][\\\
              udc00-\\udfff]|\\udbff[\\udc00-\\udfff])*$"
            type: string
          specificAssetIds:
            items:
              $ref: '#/components/schemas/SpecificAssetId'
            minItems: 1
            type: array
          modelType:
            pattern: Entity
            type: string
        required:
        - entityType
      title: Entity
    EntityType:
      enum:
      - CoManagedEntity
      - SelfManagedEntity
      title: EntityType
      type: string
    Operation:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          inputVariables:
            items:
              $ref: '#/components/schemas/OperationVariable'
            minItems: 1
            type: array
          outputVariables:
            items:
              $ref: '#/components/schemas/OperationVariable'
            minItems: 1
            type: array
          inoutputVariables:
            items:
              $ref: '#/components/schemas/OperationVariable'
            minItems: 1
            type: array
          modelType:
            pattern: Operation
            type: string
      title: Operation
    OperationVariable:
      example:
        value: null
      properties:
        value:
          $ref: '#/components/schemas/SubmodelElement_choice'
      required:
      - value
      title: OperationVariable
      type: object
    SubmodelElementCollection:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          value:
            items:
              $ref: '#/components/schemas/SubmodelElement_choice'
            minItems: 1
            type: array
          modelType:
            pattern: SubmodelElementCollection
            type: string
      title: SubmodelElementCollection
    SubmodelElementList:
      allOf:
      - $ref: '#/components/schemas/SubmodelElement'
      - properties:
          orderRelevant:
            type: boolean
          semanticIdListElement:
            $ref: '#/components/schemas/Reference'
          typeValueListElement:
            $ref: '#/components/schemas/AasSubmodelElements'
          valueTypeListElement:
            $ref: '#/components/schemas/DataTypeDefXsd'
          value:
            items:
              $ref: '#/components/schemas/SubmodelElement_choice'
            minItems: 1
            type: array
          modelType:
            pattern: SubmodelElementList
            type: string
        required:
        - typeValueListElement
      title: SubmodelElementList
    AasSubmodelElements:
      enum:
      - AnnotatedRelationshipElement
      - BasicEventElement
      - Blob
      - Capability
      - DataElement
      - Entity
      - EventElement
      - File
      - MultiLanguageProperty
      - Operation
      - Property
      - Range
      - ReferenceElement
      - RelationshipElement
      - SubmodelElement
      - SubmodelElementCollection
      - SubmodelElementList
      title: AasSubmodelElements
      type: string
    SubmodelMetadata:
      allOf:
      - $ref: '#/components/schemas/Identifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/HasKind'
      title: SubmodelMetadata
    SubmodelValue:
      example:
        submodelElements:
        - null
        - null
      properties:
        submodelElements:
          items:
            $ref: '#/components/schemas/SubmodelElement'
          minItems: 1
          title: submodelElements
          type: array
      title: SubmodelValue
    PathItem:
      pattern: "[A-Za-z][A-Za-z0-9_]+(\\.[A-Za-z][A-Za-z0-9_]+){0,}"
      title: PathItem
      type: string
    GetSubmodelElementsResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - properties:
          result:
            items:
              $ref: '#/components/schemas/SubmodelElement'
            type: array
        type: object
      title: GetSubmodelElementsResult
    GetSubmodelElementsMetadataResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - properties:
          result:
            items:
              $ref: '#/components/schemas/SubmodelElementMetadata'
            type: array
        type: object
      title: GetSubmodelElementsMetadataResult
    SubmodelElementMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      oneOf:
      - $ref: '#/components/schemas/BlobMetadata'
      - $ref: '#/components/schemas/FileMetadata'
      - $ref: '#/components/schemas/CapabilityMetadata'
      - $ref: '#/components/schemas/EntityMetadata'
      - $ref: '#/components/schemas/BasicEventElementMetadata'
      - $ref: '#/components/schemas/MultiLanguagePropertyMetadata'
      - $ref: '#/components/schemas/OperationMetadata'
      - $ref: '#/components/schemas/PropertyMetadata'
      - $ref: '#/components/schemas/RangeMetadata'
      - $ref: '#/components/schemas/ReferenceElementMetadata'
      - $ref: '#/components/schemas/AnnotatedRelationshipElementMetadata'
      - $ref: '#/components/schemas/RelationshipElementMetadata'
      - $ref: '#/components/schemas/SubmodelElementListMetadata'
      - $ref: '#/components/schemas/SubmodelElementCollectionMetadata'
      title: SubmodelElementMetadata
    SubmodelElementAttributes:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasKind'
      title: SubmodelElementAttributes
    BlobMetadata:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasKind'
      title: BlobMetadata
    FileMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      title: FileMetadata
    CapabilityMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      title: CapabilityMetadata
    EntityMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      title: EntityMetadata
    BasicEventElementMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      - properties:
          direction:
            $ref: '#/components/schemas/Direction'
          state:
            $ref: '#/components/schemas/StateOfEvent'
          messageTopic:
            maxLength: 255
            type: string
          messageBroker:
            $ref: '#/components/schemas/Reference'
          lastUpdate:
            type: string
          minInterval:
            type: string
          maxInterval:
            type: string
      title: BasicEventElementMetadata
    MultiLanguagePropertyMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      title: MultiLanguagePropertyMetadata
    OperationMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      title: OperationMetadata
    PropertyMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      properties:
        valueType:
          $ref: '#/components/schemas/DataTypeDefXsd'
      title: PropertyMetadata
    RangeMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      properties:
        valueType:
          $ref: '#/components/schemas/DataTypeDefXsd'
      title: RangeMetadata
    ReferenceElementMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      title: ReferenceElementMetadata
    AnnotatedRelationshipElementMetadata:
      allOf:
      - $ref: '#/components/schemas/Referable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - $ref: '#/components/schemas/HasSemantics'
      - $ref: '#/components/schemas/Qualifiable'
      - $ref: '#/components/schemas/HasKind'
      title: AnnotatedRelationshipElementMetadata
    RelationshipElementMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      title: RelationshipElementMetadata
    SubmodelElementListMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      properties:
        orderRelevant:
          title: orderRelevant
          type: boolean
        semanticIdListElement:
          $ref: '#/components/schemas/Reference'
        typeValueListElement:
          $ref: '#/components/schemas/ModelType'
        valueTypeListElement:
          $ref: '#/components/schemas/DataTypeDefXsd'
      title: SubmodelElementListMetadata
    SubmodelElementCollectionMetadata:
      allOf:
      - $ref: '#/components/schemas/SubmodelElementAttributes'
      title: SubmodelElementCollectionMetadata
    GetSubmodelElementsValueResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - properties:
          result:
            items:
              $ref: '#/components/schemas/SubmodelElementValue'
            type: array
        type: object
      title: GetSubmodelElementsValueResult
    SubmodelElementValue:
      oneOf:
      - $ref: '#/components/schemas/BasicEventElementValue'
      - $ref: '#/components/schemas/PropertyValue'
      - $ref: '#/components/schemas/MultiLanguagePropertyValue'
      - $ref: '#/components/schemas/BlobValue'
      - $ref: '#/components/schemas/FileValue'
      - $ref: '#/components/schemas/RangeValue'
      - $ref: '#/components/schemas/ReferenceElementValue'
      - $ref: '#/components/schemas/RelationshipElementValue'
      - $ref: '#/components/schemas/AnnotatedRelationshipElementValue'
      - $ref: '#/components/schemas/EntityValue'
      - $ref: '#/components/schemas/SubmodelElementCollectionValue'
      - $ref: '#/components/schemas/SubmodelElementListValue'
      title: SubmodelElementValue
    BasicEventElementValue:
      properties:
        observed:
          $ref: '#/components/schemas/ReferenceValue'
      required:
      - observed
      title: BasicEventElementValue
      type: object
    ReferenceValue:
      properties:
        type:
          $ref: '#/components/schemas/ReferenceTypes'
        keys:
          items:
            $ref: '#/components/schemas/Key'
          title: keys
          type: array
      title: ReferenceValue
      type: object
    PropertyValue:
      oneOf:
      - $ref: '#/components/schemas/StringValue'
      - $ref: '#/components/schemas/NumberValue'
      - $ref: '#/components/schemas/BooleanValue'
      title: PropertyValue
    StringValue:
      type: string
    NumberValue:
      type: number
    BooleanValue:
      type: boolean
    MultiLanguagePropertyValue:
      description: "Since patternProperties and propertyNames are not supported by\
        \ OpenApi yet, the ValueOnly serialization for this elements works with the\
        \ key-attribute as the JSON-property name and the value-attribute as the corresponding\
        \ value."
      type: object
    BlobValue:
      properties:
        contentType:
          maxLength: 100
          minLength: 1
          title: contentType
          type: string
        value:
          title: value
          type: string
      required:
      - contentType
      - value
      title: BlobValue
      type: object
    FileValue:
      properties:
        contentType:
          maxLength: 100
          minLength: 1
          title: contentType
          type: string
        value:
          maxLength: 2000
          minLength: 1
          title: value
          type: string
      required:
      - contentType
      - value
      title: FileValue
      type: object
    RangeValue:
      properties:
        max:
          title: max
          type: number
        min:
          title: min
          type: number
      required:
      - max
      - min
      title: RangeValue
      type: object
    ReferenceElementValue:
      properties:
        type:
          $ref: '#/components/schemas/ReferenceTypes'
        keys:
          items:
            $ref: '#/components/schemas/Key'
          title: keys
          type: array
      title: ReferenceElementValue
      type: object
    RelationshipElementValue:
      properties:
        first:
          $ref: '#/components/schemas/ReferenceValue'
        second:
          $ref: '#/components/schemas/ReferenceValue'
      required:
      - first
      - second
      title: RelationshipElementValue
      type: object
    AnnotatedRelationshipElementValue:
      properties:
        first:
          $ref: '#/components/schemas/ReferenceValue'
        second:
          $ref: '#/components/schemas/ReferenceValue'
        annotations:
          items:
            $ref: '#/components/schemas/ValueOnly'
          title: annotations
          type: array
      required:
      - first
      - second
      title: AnnotatedRelationshipElementValue
      type: object
    ValueOnly:
      description: |
        The ValueOnly serialization of submodel elements (patternProperties and propertyNames will be supported propably with OpenApi 3.1). The full description of the generic JSON validation schema for the ValueOnly-serialization can be found in chapter 11.4.3 in Details of the Asset Administration Shell Part 2.
      title: ValueOnly
      type: object
    EntityValue:
      properties:
        entityType:
          $ref: '#/components/schemas/EntityType'
        globalAssetId:
          maxLength: 2000
          minLength: 1
          pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\U00010000-\\U0010FFFF]*$"
          title: globalAssetId
          type: string
        specificAssetIds:
          items:
            $ref: '#/components/schemas/SpecificAssetIdValue'
          title: specificAssetIds
          type: array
        statements:
          items:
            $ref: '#/components/schemas/ValueOnly'
          title: statements
          type: array
      required:
      - entityType
      - statements
      title: EntityValue
      type: object
    SpecificAssetIdValue:
      description: "Since patternProperties and propertyNames are not supported by\
        \ OpenApi yet, the ValueOnly serialization for this elements works with the\
        \ key-attribute as the JSON-property name and the value-attribute as the corresponding\
        \ value."
      title: SpecificAssetIdValue
      type: object
    SubmodelElementCollectionValue:
      description: "Since patternProperties and propertyNames are not supported by\
        \ OpenApi yet, the ValueOnly serialization for this elements works with the\
        \ key-attribute as the JSON-property name and the value-attribute as the corresponding\
        \ value."
      type: object
    SubmodelElementListValue:
      items:
        $ref: '#/components/schemas/SubmodelElementValue'
      type: array
    GetPathItemsResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - properties:
          result:
            items:
              $ref: '#/components/schemas/PathItem'
            type: array
        type: object
      title: GetPathItemsResult
    OperationRequest:
      example:
        inputArguments:
        - value: null
        - value: null
        inoutputArguments:
        - value: null
        - value: null
        clientTimeoutDuration: clientTimeoutDuration
      properties:
        inoutputArguments:
          items:
            $ref: '#/components/schemas/OperationVariable'
          title: inoutputArguments
          type: array
        inputArguments:
          items:
            $ref: '#/components/schemas/OperationVariable'
          title: inputArguments
          type: array
        clientTimeoutDuration:
          pattern: ^(-?)P(?=.)((\d+)Y)?((\d+)M)?((\d+)D)?(T(?=.)((\d+)H)?((\d+)M)?(\d*(\.\d+)?S)?)?$
          title: clientTimeoutDuration
          type: string
      title: OperationRequest
      type: object
    OperationResult:
      allOf:
      - $ref: '#/components/schemas/BaseOperationResult'
      - properties:
          inoutputArguments:
            items:
              $ref: '#/components/schemas/OperationVariable'
            type: array
          outputArguments:
            items:
              $ref: '#/components/schemas/OperationVariable'
            type: array
      title: OperationResult
      type: object
    BaseOperationResult:
      allOf:
      - $ref: '#/components/schemas/Result'
      - properties:
          executionState:
            $ref: '#/components/schemas/ExecutionState'
          success:
            type: boolean
      title: BaseOperationResult
    ExecutionState:
      enum:
      - Initiated
      - Running
      - Completed
      - Canceled
      - Failed
      - Timeout
      title: ExecutionState
      type: string
    OperationRequestValueOnly:
      example:
        inputArguments: "{}"
        inoutputArguments: "{}"
        clientTimeoutDuration: clientTimeoutDuration
      properties:
        inoutputArguments:
          description: |
            The ValueOnly serialization of submodel elements (patternProperties and propertyNames will be supported propably with OpenApi 3.1). The full description of the generic JSON validation schema for the ValueOnly-serialization can be found in chapter 11.4.3 in Details of the Asset Administration Shell Part 2.
          title: ValueOnly
          type: object
        inputArguments:
          description: |
            The ValueOnly serialization of submodel elements (patternProperties and propertyNames will be supported propably with OpenApi 3.1). The full description of the generic JSON validation schema for the ValueOnly-serialization can be found in chapter 11.4.3 in Details of the Asset Administration Shell Part 2.
          title: ValueOnly
          type: object
        clientTimeoutDuration:
          pattern: ^(-?)P(?=.)((\d+)Y)?((\d+)M)?((\d+)D)?(T(?=.)((\d+)H)?((\d+)M)?(\d*(\.\d+)?S)?)?$
          title: clientTimeoutDuration
          type: string
      required:
      - clientTimeoutDuration
      title: OperationRequestValueOnly
      type: object
    OperationResultValueOnly:
      allOf:
      - $ref: '#/components/schemas/BaseOperationResult'
      - properties:
          inoutputArguments:
            $ref: '#/components/schemas/ValueOnly'
          outputArguments:
            $ref: '#/components/schemas/ValueOnly'
      title: OperationResultValueOnly
      type: object
    GetAssetAdministrationShellsResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - properties:
          result:
            items:
              $ref: '#/components/schemas/AssetAdministrationShell'
            type: array
        type: object
      title: GetAssetAdministrationShellsResult
    GetSubmodelsResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - properties:
          result:
            items:
              $ref: '#/components/schemas/Submodel'
            type: array
        type: object
      title: GetSubmodelsResult
    GetSubmodelsMetadataResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - properties:
          result:
            items:
              $ref: '#/components/schemas/SubmodelMetadata'
            type: array
        type: object
      title: GetSubmodelsMetadataResult
    GetSubmodelsValueResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - properties:
          result:
            items:
              $ref: '#/components/schemas/SubmodelValue'
            type: array
        type: object
      title: GetSubmodelsValueResult
    GetConceptDescriptionsResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - properties:
          result:
            items:
              $ref: '#/components/schemas/ConceptDescription'
            type: array
        type: object
      title: GetConceptDescriptionsResult
    ConceptDescription:
      allOf:
      - $ref: '#/components/schemas/Identifiable'
      - $ref: '#/components/schemas/HasDataSpecification'
      - properties:
          isCaseOf:
            items:
              $ref: '#/components/schemas/Reference'
            minItems: 1
            type: array
          modelType:
            pattern: ConceptDescription
            type: string
      title: ConceptDescription
    GetAssetAdministrationShellDescriptorsResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - properties:
          result:
            items:
              $ref: '#/components/schemas/AssetAdministrationShellDescriptor'
            type: array
        type: object
      title: GetAssetAdministrationShellDescriptorsResult
    AssetAdministrationShellDescriptor:
      allOf:
      - $ref: '#/components/schemas/Descriptor'
      - properties:
          administration:
            $ref: '#/components/schemas/AdministrativeInformation'
          assetKind:
            $ref: '#/components/schemas/AssetKind'
          assetType:
            maxLength: 2000
            minLength: 1
            pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\U00010000-\\\
              U0010FFFF]*$"
            type: string
          endpoints:
            items:
              $ref: '#/components/schemas/Endpoint'
            minItems: 1
            type: array
          globalAssetId:
            maxLength: 2000
            minLength: 1
            pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\U00010000-\\\
              U0010FFFF]*$"
            type: string
          idShort:
            maxLength: 128
            type: string
          id:
            maxLength: 2000
            minLength: 1
            pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\U00010000-\\\
              U0010FFFF]*$"
            type: string
          specificAssetIds:
            items:
              $ref: '#/components/schemas/SpecificAssetId'
            type: array
          submodelDescriptors:
            items:
              $ref: '#/components/schemas/SubmodelDescriptor'
            type: array
      example: "{ \"id\": \"https://example.org/aas/motor\", \"endpoints\": [ { \"\
        protocolInformation\": { \"href\": \"https://localhost:1234/api/v3.0/aas\"\
        , \"endpointProtocol\": \"HTTP\", \"endpointProtocolVersion\": [\"1.1\"] },\
        \ \"interface\": \"AAS-3.0\" }, { \"protocolInformation\": { \"href\": \"\
        opc.tcp://localhost:4840\" }, \"interface\": \"AAS-3.0\" }, { \"protocolInformation\"\
        : { \"href\": \"https://localhost:5678\", \"endpointProtocol\": \"HTTP\",\
        \ \"endpointProtocolVersion\": [\"1.1\"], \"subprotocol\": \"OPC UA Basic\
        \ SOAP\", \"subprotocolBody\": \"ns=2;s=MyAAS\", \"subprotocolBodyEncoding\"\
        : \"application/soap+xml\" }, \"interface\": \"AAS-3.0\" } ] }"
      required:
      - id
      title: AssetAdministrationShellDescriptor
      type: object
    Descriptor:
      example: "{ \"endpoints\": [ { \"protocolInformation\": { \"href\": \"https://localhost:1234/api/v3.0/aas\"\
        , \"endpointProtocolVersion\": [\"1.1\"] }, \"interface\": \"AAS-3.0\" },\
        \ { \"protocolInformation\": { \"href\": \"opc.tcp://localhost:4840\" }, \"\
        interface\": \"AAS-3.0\" }, { \"protocolInformation\": { \"href\": \"https://localhost:5678\"\
        , \"endpointProtocolVersion\": [\"1.1\"], \"subprotocol\": \"OPC UA Basic\
        \ SOAP\", \"subprotocolBody\": \"ns=2;s=MyAAS\", \"subprotocolBodyEncoding\"\
        : \"application/soap+xml\" }, \"interface\": \"AAS-3.0\" } ] }"
      properties:
        description:
          items:
            $ref: '#/components/schemas/LangStringTextType'
          type: array
        displayName:
          items:
            $ref: '#/components/schemas/LangStringNameType'
          type: array
        extensions:
          items:
            $ref: '#/components/schemas/Extension'
          minItems: 1
          type: array
      title: Descriptor
      type: object
    Endpoint:
      properties:
        interface:
          maxLength: 128
          title: interface
          type: string
        protocolInformation:
          $ref: '#/components/schemas/ProtocolInformation'
      required:
      - interface
      - protocolInformation
      title: Endpoint
      type: object
    ProtocolInformation:
      properties:
        href:
          maxLength: 2048
          title: href
          type: string
        endpointProtocol:
          maxLength: 128
          title: endpointProtocol
          type: string
        endpointProtocolVersion:
          items:
            maxLength: 128
            type: string
          title: endpointProtocolVersion
          type: array
        subprotocol:
          maxLength: 128
          title: subprotocol
          type: string
        subprotocolBody:
          maxLength: 128
          title: subprotocolBody
          type: string
        subprotocolBodyEncoding:
          maxLength: 128
          title: subprotocolBodyEncoding
          type: string
        securityAttributes:
          items:
            $ref: '#/components/schemas/ProtocolInformation_securityAttributes'
          minItems: 1
          title: securityAttributes
          type: array
      required:
      - href
      title: ProtocolInformation
      type: object
    SubmodelDescriptor:
      allOf:
      - $ref: '#/components/schemas/Descriptor'
      example: "{ \"id\": \"https://admin-shell.io/zvei/nameplate/1/0/Nameplate\"\
        , \"endpoints\": [ { \"href\": { \"href\": \"https://localhost:1234/api/v3.0/submodel\"\
        , \"endpointProtocol\": \"HTTP\", \"endpointProtocolVersion\": [\"1.1\"] },\
        \ \"interface\": \"AAS-3.0\" }, { \"protocolInformation\": { \"href\": \"\
        opc.tcp://localhost:4840\" }, \"interface\": \"AAS-3.0\" }, { \"protocolInformation\"\
        : { \"href\": \"https://localhost:5678\", \"endpointProtocol\": \"HTTP\",\
        \ \"endpointProtocolVersion\": [\"1.1\"], \"subprotocol\": \"OPC UA Basic\
        \ SOAP\", \"subprotocolBody\": \"ns=2;s=MyAAS\", \"subprotocolBodyEncoding\"\
        : \"application/soap+xml\" }, \"interface\": \"AAS-3.0\" } ] }"
      properties:
        administration:
          $ref: '#/components/schemas/AdministrativeInformation'
        endpoints:
          items:
            $ref: '#/components/schemas/Endpoint'
          minItems: 1
          type: array
        idShort:
          maxLength: 128
          type: string
        id:
          maxLength: 2000
          minLength: 1
          pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\U00010000-\\U0010FFFF]*$"
          type: string
        semanticId:
          $ref: '#/components/schemas/Reference'
        supplementalSemanticId:
          items:
            $ref: '#/components/schemas/Reference'
          minItems: 1
          type: array
      required:
      - endpoints
      - id
      title: SubmodelDescriptor
      type: object
    GetSubmodelDescriptorsResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - properties:
          result:
            items:
              $ref: '#/components/schemas/SubmodelDescriptor'
            type: array
        type: object
      title: GetSubmodelDescriptorsResult
    GetPackageDescriptionsResult:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - properties:
          result:
            items:
              $ref: '#/components/schemas/PackageDescription'
            type: array
        type: object
      title: GetPackageDescriptionsResult
    PackageDescription:
      example:
        aasIds:
        - aasIds
        - aasIds
        packageId: packageId
      properties:
        aasIds:
          items:
            maxLength: 2000
            pattern: "^[\\x09\\x0A\\x0D\\x20-\\uD7FF\\uE000-\\uFFFD\\U00010000-\\\
              U0010FFFF]*$"
            type: string
          title: aasIds
          type: array
        packageId:
          maxLength: 128
          title: packageId
          type: string
      title: PackageDescription
      type: object
    Environment:
      properties:
        assetAdministrationShells:
          items:
            $ref: '#/components/schemas/AssetAdministrationShell'
          minItems: 1
          title: assetAdministrationShells
          type: array
        submodels:
          items:
            $ref: '#/components/schemas/Submodel'
          minItems: 1
          title: submodels
          type: array
        conceptDescriptions:
          items:
            $ref: '#/components/schemas/ConceptDescription'
          minItems: 1
          title: conceptDescriptions
          type: array
      title: Environment
      type: object
    ServiceDescription:
      description: "The Description object enables servers to present their capabilities\
        \ to the clients, in particular which profiles they implement. At least one\
        \ defined profile is required. Additional, proprietary attributes might be\
        \ included. Nevertheless, the server must not expect that a regular client\
        \ understands them."
      example: |-
        {
          "profiles": [
            "https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRegistryServiceSpecification/SSP-002",
            "https://admin-shell.io/aas/API/3/0/SubmodelRegistryServiceSpecification/SSP-002"
          ]
        }
      properties:
        profiles:
          items:
            enum:
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelServiceSpecification/SSP-003
            - https://admin-shell.io/aas/API/3/0/AasxFileServerServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRegistryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRegistryServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelRegistryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/SubmodelRegistryServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/DiscoveryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRepositoryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/AssetAdministrationShellRepositoryServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-001
            - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-002
            - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-003
            - https://admin-shell.io/aas/API/3/0/SubmodelRepositoryServiceSpecification/SSP-004
            - https://admin-shell.io/aas/API/3/0/ConceptDescriptionServiceSpecification/SSP-001
            type: string
          minItems: 1
          type: array
      title: ServiceDescription
      type: object
    assetinformation_thumbnail_body:
      properties:
        fileName:
          type: string
        file:
          format: binary
          type: string
      type: object
    idShortPath_attachment_body:
      properties:
        fileName:
          type: string
        file:
          format: binary
          type: string
      type: object
    idShortPath_attachment_body_1:
      properties:
        fileName:
          type: string
        file:
          format: binary
          type: string
      type: object
    assetinformation_thumbnail_body_1:
      properties:
        fileName:
          type: string
        file:
          format: binary
          type: string
      type: object
    idShortPath_attachment_body_2:
      properties:
        fileName:
          type: string
        file:
          format: binary
          type: string
      type: object
    idShortPath_attachment_body_3:
      properties:
        fileName:
          type: string
        file:
          format: binary
          type: string
      type: object
    inline_response_200:
      allOf:
      - $ref: '#/components/schemas/PagedResult'
      - properties:
          result:
            items:
              type: string
            type: array
        type: object
      title: inline_response_200
    packages_body:
      properties:
        aasIds:
          items:
            type: string
          type: array
        file:
          format: binary
          type: string
        fileName:
          type: string
      type: object
    packages_packageId_body:
      properties:
        aasIds:
          items:
            type: string
          type: array
        file:
          format: binary
          type: string
        fileName:
          type: string
      type: object
    PagedResult_paging_metadata:
      properties:
        cursor:
          example: wJlCDLIl6KTWypN7T6vc6nWEmEYe99Hjf1XY1xmqV-M=#
          title: cursor
          type: string
      title: PagedResult_paging_metadata
      type: object
    ProtocolInformation_securityAttributes:
      properties:
        type:
          enum:
          - NONE
          - RFC_TLSA
          - W3C_DID
          title: type
          type: string
        key:
          title: key
          type: string
        value:
          title: value
          type: string
      required:
      - key
      - type
      - value
      title: ProtocolInformation_securityAttributes
      type: object
