from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class PackageDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aas_ids=None, package_id=None):  # noqa: E501
        """PackageDescription - a model defined in OpenAPI

        :param aas_ids: The aas_ids of this PackageDescription.  # noqa: E501
        :type aas_ids: List[str]
        :param package_id: The package_id of this PackageDescription.  # noqa: E501
        :type package_id: str
        """
        self.openapi_types = {
            'aas_ids': List[str],
            'package_id': str
        }

        self.attribute_map = {
            'aas_ids': 'aasIds',
            'package_id': 'packageId'
        }

        self._aas_ids = aas_ids
        self._package_id = package_id

    @classmethod
    def from_dict(cls, dikt) -> 'PackageDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PackageDescription of this PackageDescription.  # noqa: E501
        :rtype: PackageDescription
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aas_ids(self) -> List[str]:
        """Gets the aas_ids of this PackageDescription.


        :return: The aas_ids of this PackageDescription.
        :rtype: List[str]
        """
        return self._aas_ids

    @aas_ids.setter
    def aas_ids(self, aas_ids: List[str]):
        """Sets the aas_ids of this PackageDescription.


        :param aas_ids: The aas_ids of this PackageDescription.
        :type aas_ids: List[str]
        """

        self._aas_ids = aas_ids

    @property
    def package_id(self) -> str:
        """Gets the package_id of this PackageDescription.


        :return: The package_id of this PackageDescription.
        :rtype: str
        """
        return self._package_id

    @package_id.setter
    def package_id(self, package_id: str):
        """Sets the package_id of this PackageDescription.


        :param package_id: The package_id of this PackageDescription.
        :type package_id: str
        """
        if package_id is not None and len(package_id) > 128:
            raise ValueError("Invalid value for `package_id`, length must be less than or equal to `128`")  # noqa: E501

        self._package_id = package_id
