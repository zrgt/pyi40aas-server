from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.embedded_data_specification import EmbeddedDataSpecification
from openapi_server import util

from openapi_server.models.embedded_data_specification import EmbeddedDataSpecification  # noqa: E501

class HasDataSpecification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, embedded_data_specifications=None):  # noqa: E501
        """HasDataSpecification - a model defined in OpenAPI

        :param embedded_data_specifications: The embedded_data_specifications of this HasDataSpecification.  # noqa: E501
        :type embedded_data_specifications: List[EmbeddedDataSpecification]
        """
        self.openapi_types = {
            'embedded_data_specifications': List[EmbeddedDataSpecification]
        }

        self.attribute_map = {
            'embedded_data_specifications': 'embeddedDataSpecifications'
        }

        self._embedded_data_specifications = embedded_data_specifications

    @classmethod
    def from_dict(cls, dikt) -> 'HasDataSpecification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HasDataSpecification of this HasDataSpecification.  # noqa: E501
        :rtype: HasDataSpecification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def embedded_data_specifications(self) -> List[EmbeddedDataSpecification]:
        """Gets the embedded_data_specifications of this HasDataSpecification.


        :return: The embedded_data_specifications of this HasDataSpecification.
        :rtype: List[EmbeddedDataSpecification]
        """
        return self._embedded_data_specifications

    @embedded_data_specifications.setter
    def embedded_data_specifications(self, embedded_data_specifications: List[EmbeddedDataSpecification]):
        """Sets the embedded_data_specifications of this HasDataSpecification.


        :param embedded_data_specifications: The embedded_data_specifications of this HasDataSpecification.
        :type embedded_data_specifications: List[EmbeddedDataSpecification]
        """
        if embedded_data_specifications is not None and len(embedded_data_specifications) < 1:
            raise ValueError("Invalid value for `embedded_data_specifications`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._embedded_data_specifications = embedded_data_specifications
